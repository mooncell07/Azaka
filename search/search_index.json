{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome + Hi and welcome to the documentation of Azaka! Features + Fully Asynchronous - Everything which poses a threat of blocking the I/O for a significant amount of time is async. Caching - Azaka supports caching responses, which saves us from getting throttled quickly! Easy to Use - Azaka provides a really easy to use interface for creating complex commands and a bunch of ready-made presets for those in hurry. Well Typehinted - Everything in this library is properly typehinted. No Dependency requirement - No third party dependency is required to do anything in entire library. Getting Started + Tutorial. API-Reference . Logging and other utility.","title":"Home"},{"location":"#welcome","text":"Hi and welcome to the documentation of Azaka!","title":"Welcome"},{"location":"#features","text":"Fully Asynchronous - Everything which poses a threat of blocking the I/O for a significant amount of time is async. Caching - Azaka supports caching responses, which saves us from getting throttled quickly! Easy to Use - Azaka provides a really easy to use interface for creating complex commands and a bunch of ready-made presets for those in hurry. Well Typehinted - Everything in this library is properly typehinted. No Dependency requirement - No third party dependency is required to do anything in entire library.","title":"Features"},{"location":"#getting-started","text":"Tutorial. API-Reference . Logging and other utility.","title":"Getting Started"},{"location":"logging-%26-utils/","text":"Logging + Azaka writes logs for the events happening in the library at DEBUG level and also enables the asyncio debug logger internally. Due to the nature of the library, it is recommended to keep logging ON to prevent any errors/events go silent. Here we will use python's built-in logging module to log the events: import logging logging . basicConfig ( level = logging . DEBUG )","title":"Logging & Utilities"},{"location":"logging-%26-utils/#logging","text":"Azaka writes logs for the events happening in the library at DEBUG level and also enables the asyncio debug logger internally. Due to the nature of the library, it is recommended to keep logging ON to prevent any errors/events go silent. Here we will use python's built-in logging module to log the events: import logging logging . basicConfig ( level = logging . DEBUG )","title":"Logging"},{"location":"API-Reference/internals/commands/command/","text":"azaka.commands.command.Command + A helper class for creating a command from an interface or mapping. Warning This object is not meant to be created by users. __init__ ( self , name , ** kwargs ) special + Command constructor. Parameters: Name Type Description Default name str The name of the command. required **kwargs t.Any The arguments of the command or an interface. {} Attributes: Name Type Description name str The name of the command. kwargs t.Any The arguments of the command. interface Interface The Interface of the command. create ( self ) + Creates the command from the name, arguments or interface. Returns: Type Description bytes The issuable command. azaka.commands.command.Response + A helper class for creating a clean middle object from response to check the type and body. __init__ ( self , data ) special + Response constructor. Parameters: Name Type Description Default data bytes The response data. required Attributes: Name Type Description type t.Optional[ResponseType] The type of the response. body t.Optional[t.Union[t.Mapping[t.Any, t.Any], str]] The body of the response. parse ( self ) + A response parser which fills the type and body attributes.","title":"Command"},{"location":"API-Reference/internals/commands/command/#azaka.commands.command.Command","text":"A helper class for creating a command from an interface or mapping. Warning This object is not meant to be created by users.","title":"Command"},{"location":"API-Reference/internals/commands/command/#azaka.commands.command.Command.__init__","text":"Command constructor. Parameters: Name Type Description Default name str The name of the command. required **kwargs t.Any The arguments of the command or an interface. {} Attributes: Name Type Description name str The name of the command. kwargs t.Any The arguments of the command. interface Interface The Interface of the command.","title":"__init__()"},{"location":"API-Reference/internals/commands/command/#azaka.commands.command.Command.create","text":"Creates the command from the name, arguments or interface. Returns: Type Description bytes The issuable command.","title":"create()"},{"location":"API-Reference/internals/commands/command/#azaka.commands.command.Response","text":"A helper class for creating a clean middle object from response to check the type and body.","title":"Response"},{"location":"API-Reference/internals/commands/command/#azaka.commands.command.Response.__init__","text":"Response constructor. Parameters: Name Type Description Default data bytes The response data. required Attributes: Name Type Description type t.Optional[ResponseType] The type of the response. body t.Optional[t.Union[t.Mapping[t.Any, t.Any], str]] The body of the response.","title":"__init__()"},{"location":"API-Reference/internals/commands/command/#azaka.commands.command.Response.parse","text":"A response parser which fills the type and body attributes.","title":"parse()"},{"location":"API-Reference/internals/commands/proxy/","text":"azaka.commands.proxy.BoolOProxy + Final parser for the expressions. This object takes care of parsing bitwise AND and the bitwise OR operators and also generates the final expression which is identical to the original expression. Note This class is not meant to be instantiated directly. It is generated when any field of any Condition is conditioned against a value. for example: from azaka.condition import VNCondition print ( type ( VNCondition . TITLE == \"fate\" )) #output: <class 'azaka.commands.proxy.BoolOProxy'> You can pass this object directly to get_x methods of Context and Interface.set_condition . __init__ ( self , expression ) special + BoolOProxy constructor. Parameters: Name Type Description Default expression str The expression to be parsed. required Attributes: Name Type Description expression The expression in parentheses. __and__ ( self , value ) special + Does an inplace bitwise AND operation and Returns the BoolOProxy object. The expression will look like (exprA and exprB) in string form. __or__ ( self , value ) special + Does an inplace bitwise OR operation and Returns the BoolOProxy object. The expression will look like (exprA or exprB) in string form. __repr__ ( self ) special + Returns the string representation of the expression. __str__ ( self ) special + Returns the string representation of the expression. azaka.commands.proxy.ConditionProxy + An object which takes care of parsing binary expressions which consist of Relational Operators and the special operator % for searching. __init__ ( self , attr_name , operator ) special + ConditionProxy constructor. Parameters: Name Type Description Default attr_name str The name of the field. required operator Operator The Operator instance to be used. required __eq__ ( self , value ) special + Returns a BoolOProxy object with the expression field = value . __ne__ ( self , value ) special + Returns a BoolOProxy object with the expression field != value . __lt__ ( self , value ) special + Returns a BoolOProxy object with the expression field < value . __le__ ( self , value ) special + Returns a BoolOProxy object with the expression field <= value . __gt__ ( self , value ) special + Returns a BoolOProxy object with the expression field > value . __ge__ ( self , value ) special + Returns a BoolOProxy object with the expression field >= value . __mod__ ( self , value ) special + Returns a BoolOProxy object with the expression field ~ value .","title":"Proxy"},{"location":"API-Reference/internals/commands/proxy/#azaka.commands.proxy.BoolOProxy","text":"Final parser for the expressions. This object takes care of parsing bitwise AND and the bitwise OR operators and also generates the final expression which is identical to the original expression. Note This class is not meant to be instantiated directly. It is generated when any field of any Condition is conditioned against a value. for example: from azaka.condition import VNCondition print ( type ( VNCondition . TITLE == \"fate\" )) #output: <class 'azaka.commands.proxy.BoolOProxy'> You can pass this object directly to get_x methods of Context and Interface.set_condition .","title":"BoolOProxy"},{"location":"API-Reference/internals/commands/proxy/#azaka.commands.proxy.BoolOProxy.__init__","text":"BoolOProxy constructor. Parameters: Name Type Description Default expression str The expression to be parsed. required Attributes: Name Type Description expression The expression in parentheses.","title":"__init__()"},{"location":"API-Reference/internals/commands/proxy/#azaka.commands.proxy.BoolOProxy.__and__","text":"Does an inplace bitwise AND operation and Returns the BoolOProxy object. The expression will look like (exprA and exprB) in string form.","title":"__and__()"},{"location":"API-Reference/internals/commands/proxy/#azaka.commands.proxy.BoolOProxy.__or__","text":"Does an inplace bitwise OR operation and Returns the BoolOProxy object. The expression will look like (exprA or exprB) in string form.","title":"__or__()"},{"location":"API-Reference/internals/commands/proxy/#azaka.commands.proxy.BoolOProxy.__repr__","text":"Returns the string representation of the expression.","title":"__repr__()"},{"location":"API-Reference/internals/commands/proxy/#azaka.commands.proxy.BoolOProxy.__str__","text":"Returns the string representation of the expression.","title":"__str__()"},{"location":"API-Reference/internals/commands/proxy/#azaka.commands.proxy.ConditionProxy","text":"An object which takes care of parsing binary expressions which consist of Relational Operators and the special operator % for searching.","title":"ConditionProxy"},{"location":"API-Reference/internals/commands/proxy/#azaka.commands.proxy.ConditionProxy.__init__","text":"ConditionProxy constructor. Parameters: Name Type Description Default attr_name str The name of the field. required operator Operator The Operator instance to be used. required","title":"__init__()"},{"location":"API-Reference/internals/commands/proxy/#azaka.commands.proxy.ConditionProxy.__eq__","text":"Returns a BoolOProxy object with the expression field = value .","title":"__eq__()"},{"location":"API-Reference/internals/commands/proxy/#azaka.commands.proxy.ConditionProxy.__ne__","text":"Returns a BoolOProxy object with the expression field != value .","title":"__ne__()"},{"location":"API-Reference/internals/commands/proxy/#azaka.commands.proxy.ConditionProxy.__lt__","text":"Returns a BoolOProxy object with the expression field < value .","title":"__lt__()"},{"location":"API-Reference/internals/commands/proxy/#azaka.commands.proxy.ConditionProxy.__le__","text":"Returns a BoolOProxy object with the expression field <= value .","title":"__le__()"},{"location":"API-Reference/internals/commands/proxy/#azaka.commands.proxy.ConditionProxy.__gt__","text":"Returns a BoolOProxy object with the expression field > value .","title":"__gt__()"},{"location":"API-Reference/internals/commands/proxy/#azaka.commands.proxy.ConditionProxy.__ge__","text":"Returns a BoolOProxy object with the expression field >= value .","title":"__ge__()"},{"location":"API-Reference/internals/commands/proxy/#azaka.commands.proxy.ConditionProxy.__mod__","text":"Returns a BoolOProxy object with the expression field ~ value .","title":"__mod__()"},{"location":"API-Reference/internals/connection/connector/","text":"azaka.connection.connector.Connector ( QueueControlMixin ) + This is the class that connects to the server and handles the communication with it. Warning This class is not meant to be instantiated by the user. __init__ ( self , ctx ) special + Connector constructor. Parameters: Name Type Description Default ctx Context The context to use. required Attributes: Name Type Description ctx Context The context storing all necessary information to connect to the server. protocol_factory Protocol The asyncio.Protocol subclass to use. sessiontoken asyncio.Future The session token to use. This will contain the session token if the user had passed Client.start(token=True) . transport asyncio.Transport The transport being used. This is None until the connection is established. connect ( self , command ) async + Create a connection to the server and wait until the connection is lost. Parameters: Name Type Description Default command bytes The command to send to the server. required start ( self , command ) + Starts the event loop and manages the connector. Parameters: Name Type Description Default command bytes The command to send to the server. required Exceptions: Type Description Exception The exception Connector.connect received. inject ( self , command , future ) async + Injects a command into the transport buffer. Parameters: Name Type Description Default command Command The command to send to the server. required future t.Optional[asyncio.Future] The future which should get the result of the command. required Exceptions: Type Description BrokenConnectorError When transport is not available. get_extra_info ( self , args , * , default = None ) async + Get extra information from the transport. Parameters: Name Type Description Default args t.Tuple[str, ...] The arguments asking for what info to get. required default t.Optional[t.Any] The default value to return if the transport does not have the info. None Returns: Type Description t.Optional[t.List[t.Any]] list of extra information asked for. shutdown ( self ) + A method to shutdown the connector and do necessary cleanup. handle_user_exceptions ( self , coro ) async + A method to handle exceptions that are raised by the user's coro. Parameters: Name Type Description Default coro t.Coroutine The coroutine to handle. required","title":"Connector"},{"location":"API-Reference/internals/connection/connector/#azaka.connection.connector.Connector","text":"This is the class that connects to the server and handles the communication with it. Warning This class is not meant to be instantiated by the user.","title":"Connector"},{"location":"API-Reference/internals/connection/connector/#azaka.connection.connector.Connector.__init__","text":"Connector constructor. Parameters: Name Type Description Default ctx Context The context to use. required Attributes: Name Type Description ctx Context The context storing all necessary information to connect to the server. protocol_factory Protocol The asyncio.Protocol subclass to use. sessiontoken asyncio.Future The session token to use. This will contain the session token if the user had passed Client.start(token=True) . transport asyncio.Transport The transport being used. This is None until the connection is established.","title":"__init__()"},{"location":"API-Reference/internals/connection/connector/#azaka.connection.connector.Connector.connect","text":"Create a connection to the server and wait until the connection is lost. Parameters: Name Type Description Default command bytes The command to send to the server. required","title":"connect()"},{"location":"API-Reference/internals/connection/connector/#azaka.connection.connector.Connector.start","text":"Starts the event loop and manages the connector. Parameters: Name Type Description Default command bytes The command to send to the server. required Exceptions: Type Description Exception The exception Connector.connect received.","title":"start()"},{"location":"API-Reference/internals/connection/connector/#azaka.connection.connector.Connector.inject","text":"Injects a command into the transport buffer. Parameters: Name Type Description Default command Command The command to send to the server. required future t.Optional[asyncio.Future] The future which should get the result of the command. required Exceptions: Type Description BrokenConnectorError When transport is not available.","title":"inject()"},{"location":"API-Reference/internals/connection/connector/#azaka.connection.connector.Connector.get_extra_info","text":"Get extra information from the transport. Parameters: Name Type Description Default args t.Tuple[str, ...] The arguments asking for what info to get. required default t.Optional[t.Any] The default value to return if the transport does not have the info. None Returns: Type Description t.Optional[t.List[t.Any]] list of extra information asked for.","title":"get_extra_info()"},{"location":"API-Reference/internals/connection/connector/#azaka.connection.connector.Connector.shutdown","text":"A method to shutdown the connector and do necessary cleanup.","title":"shutdown()"},{"location":"API-Reference/internals/connection/connector/#azaka.connection.connector.Connector.handle_user_exceptions","text":"A method to handle exceptions that are raised by the user's coro. Parameters: Name Type Description Default coro t.Coroutine The coroutine to handle. required","title":"handle_user_exceptions()"},{"location":"API-Reference/internals/connection/protocol/","text":"azaka.connection.protocol.Protocol ( Protocol ) + This is the asyncio.Protocol that azaka implements to communicate with the server. Warning This class is not meant to be used directly in any way. command : t . Optional [ bytes ] property writable + A property to get the first command to be sent to the server. This is called only once in the lifetime by the protocol and carries the necessary details to establish the connection. Returns: Type Description t.Optional[bytes] The first command to be sent to the server. __init__ ( self , connector ) special + Protocol constructor. Parameters: Name Type Description Default connector Connector The connector that is used to communicate with the server. required connection_made ( self , transport ) + The asyncio.BaseProtocol.connection_made override which writes the first command to the transport. Parameters: Name Type Description Default transport transports.Transport The transport that is used to communicate with the server. required pause_writing ( self ) + The asyncio.BaseProtocol.pause_writing override which is called when the buffer reaches the high watermark. This method calls asyncio.Event.clear to apply backpressure to the server. resume_writing ( self ) + The asyncio.BaseProtocol.resume_writing override which is called when the buffer is empty enough to resume writing. This method calls asyncio.Event.set to release backpressure from the server. data_received ( self , data ) + The asyncio.Protocol.data_received override which is called when data is received. Parameters: Name Type Description Default data bytes The data received from the server. required connection_lost ( self , _ ) + The asyncio.BaseProtocol.connection_lost override which is called when the connection is lost or explicitly closed. Parameters: Name Type Description Default _ t.Optional[Exception] The exception that caused the connection to be lost. required","title":"Protocol"},{"location":"API-Reference/internals/connection/protocol/#azaka.connection.protocol.Protocol","text":"This is the asyncio.Protocol that azaka implements to communicate with the server. Warning This class is not meant to be used directly in any way.","title":"Protocol"},{"location":"API-Reference/internals/connection/protocol/#azaka.connection.protocol.Protocol.command","text":"A property to get the first command to be sent to the server. This is called only once in the lifetime by the protocol and carries the necessary details to establish the connection. Returns: Type Description t.Optional[bytes] The first command to be sent to the server.","title":"command"},{"location":"API-Reference/internals/connection/protocol/#azaka.connection.protocol.Protocol.__init__","text":"Protocol constructor. Parameters: Name Type Description Default connector Connector The connector that is used to communicate with the server. required","title":"__init__()"},{"location":"API-Reference/internals/connection/protocol/#azaka.connection.protocol.Protocol.connection_made","text":"The asyncio.BaseProtocol.connection_made override which writes the first command to the transport. Parameters: Name Type Description Default transport transports.Transport The transport that is used to communicate with the server. required","title":"connection_made()"},{"location":"API-Reference/internals/connection/protocol/#azaka.connection.protocol.Protocol.pause_writing","text":"The asyncio.BaseProtocol.pause_writing override which is called when the buffer reaches the high watermark. This method calls asyncio.Event.clear to apply backpressure to the server.","title":"pause_writing()"},{"location":"API-Reference/internals/connection/protocol/#azaka.connection.protocol.Protocol.resume_writing","text":"The asyncio.BaseProtocol.resume_writing override which is called when the buffer is empty enough to resume writing. This method calls asyncio.Event.set to release backpressure from the server.","title":"resume_writing()"},{"location":"API-Reference/internals/connection/protocol/#azaka.connection.protocol.Protocol.data_received","text":"The asyncio.Protocol.data_received override which is called when data is received. Parameters: Name Type Description Default data bytes The data received from the server. required","title":"data_received()"},{"location":"API-Reference/internals/connection/protocol/#azaka.connection.protocol.Protocol.connection_lost","text":"The asyncio.BaseProtocol.connection_lost override which is called when the connection is lost or explicitly closed. Parameters: Name Type Description Default _ t.Optional[Exception] The exception that caused the connection to be lost. required","title":"connection_lost()"},{"location":"API-Reference/internals/tools/cache/","text":"azaka.tools.cache.Cache + A dict -like object that is used for caching. Warning This class is not meant to be instantiated by the user. __init__ ( self , maxsize = 50 ) special + Cache constructor. Parameters: Name Type Description Default maxsize The maximum size of the cache. 50 Attributes: Name Type Description cache OrderedDict An collections.OrderedDict instance. get ( self , key ) + get(key) -> value Returns: Type Description t.Any Either returns the value of key or None if not found. put ( self , key , value ) + put(key, value) -> None Adds a key-value pair to the cache. If the maximum size of the cache is reached, the oldest item is removed. delete ( self , key ) + delete(key) -> None Deletes a key-value pair from the cache. clear ( self ) + clear() -> None Clears the cache. __len__ ( self ) special + Returns: Type Description int The number of items in the cache. __contains__ ( self , key ) special + Returns: Type Description bool Whether the cache contains the key. __getitem__ ( self , key ) special + Parameters: Name Type Description Default key t.Any The key to get the value of. required Returns: Type Description t.Any The value of the key. __delitem__ ( self , key ) special + Parameters: Name Type Description Default key t.Any The key-value to delete. required Deletes a key-value pair from the cache. __repr__ ( self ) special + Returns: Type Description t.Any dict representation of the cache. __copy__ ( self ) special + Creates a shallow copy of the cache.","title":"Cache"},{"location":"API-Reference/internals/tools/cache/#azaka.tools.cache.Cache","text":"A dict -like object that is used for caching. Warning This class is not meant to be instantiated by the user.","title":"Cache"},{"location":"API-Reference/internals/tools/cache/#azaka.tools.cache.Cache.__init__","text":"Cache constructor. Parameters: Name Type Description Default maxsize The maximum size of the cache. 50 Attributes: Name Type Description cache OrderedDict An collections.OrderedDict instance.","title":"__init__()"},{"location":"API-Reference/internals/tools/cache/#azaka.tools.cache.Cache.get","text":"get(key) -> value Returns: Type Description t.Any Either returns the value of key or None if not found.","title":"get()"},{"location":"API-Reference/internals/tools/cache/#azaka.tools.cache.Cache.put","text":"put(key, value) -> None Adds a key-value pair to the cache. If the maximum size of the cache is reached, the oldest item is removed.","title":"put()"},{"location":"API-Reference/internals/tools/cache/#azaka.tools.cache.Cache.delete","text":"delete(key) -> None Deletes a key-value pair from the cache.","title":"delete()"},{"location":"API-Reference/internals/tools/cache/#azaka.tools.cache.Cache.clear","text":"clear() -> None Clears the cache.","title":"clear()"},{"location":"API-Reference/internals/tools/cache/#azaka.tools.cache.Cache.__len__","text":"Returns: Type Description int The number of items in the cache.","title":"__len__()"},{"location":"API-Reference/internals/tools/cache/#azaka.tools.cache.Cache.__contains__","text":"Returns: Type Description bool Whether the cache contains the key.","title":"__contains__()"},{"location":"API-Reference/internals/tools/cache/#azaka.tools.cache.Cache.__getitem__","text":"Parameters: Name Type Description Default key t.Any The key to get the value of. required Returns: Type Description t.Any The value of the key.","title":"__getitem__()"},{"location":"API-Reference/internals/tools/cache/#azaka.tools.cache.Cache.__delitem__","text":"Parameters: Name Type Description Default key t.Any The key-value to delete. required Deletes a key-value pair from the cache.","title":"__delitem__()"},{"location":"API-Reference/internals/tools/cache/#azaka.tools.cache.Cache.__repr__","text":"Returns: Type Description t.Any dict representation of the cache.","title":"__repr__()"},{"location":"API-Reference/internals/tools/cache/#azaka.tools.cache.Cache.__copy__","text":"Creates a shallow copy of the cache.","title":"__copy__()"},{"location":"API-Reference/internals/tools/mixins/","text":"azaka.tools.mixins.QueueControlMixin + A mixin that manages internal queues and events for Connector . Warning pls don't play with it __init__ ( self ) special + QueueControlMixin Constructor. Attributes: Name Type Description future_queue A queue.Queue holding asyncio.Future objects which are waiting for a response. on_error A queue.Queue holding function that will be called when an error occurs in [Protocol[]. on_connect An asyncio.Event that will be set when the connection is established. on_disconnect An asyncio.Event that will be set when the connection is closed. listener ( self , * , payload = None , exc = None ) + A listener that is called by the Protocol when a response is received. This method gets the asyncio.Future from the future_queue and sets a result/exception to it. Parameters: Name Type Description Default payload Union[Mapping[Any, Any], Any] The payload received from the API. None exc Optional[Exception] The exception that occurred. None error_listener ( self , func ) + A method that puts the error handler in the on_error queue. Parameters: Name Type Description Default func Callable The function to be called when an error occurs. required drain ( self ) async + A coroutine that waits for the push_back event to be set.","title":"Mixins"},{"location":"API-Reference/internals/tools/mixins/#azaka.tools.mixins.QueueControlMixin","text":"A mixin that manages internal queues and events for Connector . Warning pls don't play with it","title":"QueueControlMixin"},{"location":"API-Reference/internals/tools/mixins/#azaka.tools.mixins.QueueControlMixin.__init__","text":"QueueControlMixin Constructor. Attributes: Name Type Description future_queue A queue.Queue holding asyncio.Future objects which are waiting for a response. on_error A queue.Queue holding function that will be called when an error occurs in [Protocol[]. on_connect An asyncio.Event that will be set when the connection is established. on_disconnect An asyncio.Event that will be set when the connection is closed.","title":"__init__()"},{"location":"API-Reference/internals/tools/mixins/#azaka.tools.mixins.QueueControlMixin.listener","text":"A listener that is called by the Protocol when a response is received. This method gets the asyncio.Future from the future_queue and sets a result/exception to it. Parameters: Name Type Description Default payload Union[Mapping[Any, Any], Any] The payload received from the API. None exc Optional[Exception] The exception that occurred. None","title":"listener()"},{"location":"API-Reference/internals/tools/mixins/#azaka.tools.mixins.QueueControlMixin.error_listener","text":"A method that puts the error handler in the on_error queue. Parameters: Name Type Description Default func Callable The function to be called when an error occurs. required","title":"error_listener()"},{"location":"API-Reference/internals/tools/mixins/#azaka.tools.mixins.QueueControlMixin.drain","text":"A coroutine that waits for the push_back event to be set.","title":"drain()"},{"location":"API-Reference/public/client/","text":"azaka.client.Client + is_closing : bool property readonly + Returns: Type Description bool True if the client's asyncio.Transport is closing/closed. __init__ ( self , * , username = None , password = None , loop = None , ssl_context = None , cache_size = 50 ) special + Client Constructor. This is the main entry point for the library. Parameters: Name Type Description Default username t.Optional[str] Username to use for logging in. None password t.Optional[str] Password to use for logging in. None loop t.Optional[asyncio.AbstractEventLoop] The asyncio.AbstractEventLoop subclass to use. None ssl_context t.Optional[ssl.SSLContext] The ssl.SSLContext to use. If not provided, a default context will be used. None cache_size int Size of the internal cache of data. Defaults to 50. 50 Info If you have uvloop installed, then the lib will by default use uvloop's event loop. Note A password or session token should be provided if passing an username. register ( self , coro , * args , ** kwargs ) + Register a coroutine-function to be called when client is ready to issue commands. Parameters: Name Type Description Default coro t.Callable[..., t.Coroutine[t.Any, t.Any, t.Any]] The coroutine to call. required Info The coroutine-function must take a single argument of type Context . Examples: @register async def my_coro ( ctx ): ... on_error ( self , func ) + Register a function to be called when an error occurs. Parameters: Name Type Description Default func t.Callable The function to call. required Info The function must take a single argument of type AzakaException . Examples: @on_error def my_error_handler ( error ): ... start ( self , * , token = None ) + Start the client and attempt to login. Parameters: Name Type Description Default token t.Optional[t.Union[bool, str]] The token to use. If not provided, password will be used if username is provided. None Exceptions: Type Description AzakaException Raises when a username was passed but not a password or session token. Note For fetching a token, the argument should be set to True and username and password must be provided. logout ( self ) async + logout and close the client's connection. Only works when client was connected using a session token. Exceptions: Type Description AzakaException Raises when there is no session token available. fetch_token ( self ) async + Fetches the session token. Only works when token arg of Client.start was set to True . Returns: Type Description str The session token. dbstats ( self , update = False ) async + Get the VNDB database statistics. Parameters: Name Type Description Default update bool If set to True , the client makes an api call to get data else it returns cached data. False Returns: Type Description DBStats DBStats get ( self , interface , paginate = False , ** kwargs ) async + Issue a get command to the API. This method provides a centralised way to fetch data from the VNDB API. Parameters: Name Type Description Default interface Interface The Interface to use. required paginate If set to True , it returns a Paginator . False Returns: Type Description t.Union[t.Iterable[t.Any], Paginator] list of subclass of BaseObject if paginate is set to False else Paginator Info This is a low level generic method. Use the get_x methods of Context instead if you want to do basic queries. Examples: @register async def get_vn_animes ( ctx ): with Interface ( type = ctx . vn , flags = ( Flags . ANIMES ,)) as interface : VN = interface . condition () interface . set_condition ( VN . ID == 123 ) await ctx . get ( interface ) Detailed info about this method can be found in the tutorial . set_ulist ( self , interface ) async + Issue a set command to the API. This method is used to set userlist data. Parameters: Name Type Description Default interface SETInterface The SETInterface to use. required Returns: Type Description ResponseType ResponseType get_extra_info ( self , * args , * , default = None ) async + Get extra information about the client's internal asyncio.Transport . Parameters: Name Type Description Default args str The extra information to get. () default t.Optional[bool] The default value to return if the information is not available. None Returns: Type Description t.Optional[t.List[t.Any]] list of extra information. stop ( self ) + Stops the event loop and closes the connection.","title":"Client"},{"location":"API-Reference/public/client/#azaka.client.Client","text":"","title":"Client"},{"location":"API-Reference/public/client/#azaka.client.Client.is_closing","text":"Returns: Type Description bool True if the client's asyncio.Transport is closing/closed.","title":"is_closing"},{"location":"API-Reference/public/client/#azaka.client.Client.__init__","text":"Client Constructor. This is the main entry point for the library. Parameters: Name Type Description Default username t.Optional[str] Username to use for logging in. None password t.Optional[str] Password to use for logging in. None loop t.Optional[asyncio.AbstractEventLoop] The asyncio.AbstractEventLoop subclass to use. None ssl_context t.Optional[ssl.SSLContext] The ssl.SSLContext to use. If not provided, a default context will be used. None cache_size int Size of the internal cache of data. Defaults to 50. 50 Info If you have uvloop installed, then the lib will by default use uvloop's event loop. Note A password or session token should be provided if passing an username.","title":"__init__()"},{"location":"API-Reference/public/client/#azaka.client.Client.register","text":"Register a coroutine-function to be called when client is ready to issue commands. Parameters: Name Type Description Default coro t.Callable[..., t.Coroutine[t.Any, t.Any, t.Any]] The coroutine to call. required Info The coroutine-function must take a single argument of type Context . Examples: @register async def my_coro ( ctx ): ...","title":"register()"},{"location":"API-Reference/public/client/#azaka.client.Client.on_error","text":"Register a function to be called when an error occurs. Parameters: Name Type Description Default func t.Callable The function to call. required Info The function must take a single argument of type AzakaException . Examples: @on_error def my_error_handler ( error ): ...","title":"on_error()"},{"location":"API-Reference/public/client/#azaka.client.Client.start","text":"Start the client and attempt to login. Parameters: Name Type Description Default token t.Optional[t.Union[bool, str]] The token to use. If not provided, password will be used if username is provided. None Exceptions: Type Description AzakaException Raises when a username was passed but not a password or session token. Note For fetching a token, the argument should be set to True and username and password must be provided.","title":"start()"},{"location":"API-Reference/public/client/#azaka.client.Client.logout","text":"logout and close the client's connection. Only works when client was connected using a session token. Exceptions: Type Description AzakaException Raises when there is no session token available.","title":"logout()"},{"location":"API-Reference/public/client/#azaka.client.Client.fetch_token","text":"Fetches the session token. Only works when token arg of Client.start was set to True . Returns: Type Description str The session token.","title":"fetch_token()"},{"location":"API-Reference/public/client/#azaka.client.Client.dbstats","text":"Get the VNDB database statistics. Parameters: Name Type Description Default update bool If set to True , the client makes an api call to get data else it returns cached data. False Returns: Type Description DBStats DBStats","title":"dbstats()"},{"location":"API-Reference/public/client/#azaka.client.Client.get","text":"Issue a get command to the API. This method provides a centralised way to fetch data from the VNDB API. Parameters: Name Type Description Default interface Interface The Interface to use. required paginate If set to True , it returns a Paginator . False Returns: Type Description t.Union[t.Iterable[t.Any], Paginator] list of subclass of BaseObject if paginate is set to False else Paginator Info This is a low level generic method. Use the get_x methods of Context instead if you want to do basic queries. Examples: @register async def get_vn_animes ( ctx ): with Interface ( type = ctx . vn , flags = ( Flags . ANIMES ,)) as interface : VN = interface . condition () interface . set_condition ( VN . ID == 123 ) await ctx . get ( interface ) Detailed info about this method can be found in the tutorial .","title":"get()"},{"location":"API-Reference/public/client/#azaka.client.Client.set_ulist","text":"Issue a set command to the API. This method is used to set userlist data. Parameters: Name Type Description Default interface SETInterface The SETInterface to use. required Returns: Type Description ResponseType ResponseType","title":"set_ulist()"},{"location":"API-Reference/public/client/#azaka.client.Client.get_extra_info","text":"Get extra information about the client's internal asyncio.Transport . Parameters: Name Type Description Default args str The extra information to get. () default t.Optional[bool] The default value to return if the information is not available. None Returns: Type Description t.Optional[t.List[t.Any]] list of extra information.","title":"get_extra_info()"},{"location":"API-Reference/public/client/#azaka.client.Client.stop","text":"Stops the event loop and closes the connection.","title":"stop()"},{"location":"API-Reference/public/condition/","text":"azaka.commands.condition.Operator + An object for storing operators for XCondition attributes to check condition support. Warning This object is not meant to be created by users. __init__ ( self , * symbols ) special + Operator constructor. Parameters: Name Type Description Default *symbols str The symbols of the operator. () Attributes: Name Type Description symbols t.Tuple[str] The symbols of the operator. fill_some ( * symbols ) classmethod + A factory method for creating an Operator object with some symbols. Parameters: Name Type Description Default *symbols str The additional symbols of the operator. () Returns: Type Description Operator The created Operator object. Info This method fills the = and != symbols. fill_all ( * symbols ) classmethod + A factory method for creating an Operator object with all symbols. Parameters: Name Type Description Default *symbols str The additional symbols of the operator. () Returns: Type Description Operator The created Operator object. Info This method fills the = , != , > , < , >= , <= symbols. azaka.commands.condition.BaseCondition + A base class storing the comman condition attributes. Tip ALL below means all operators ( == , != , > , < , >= , <= ) are supported. SOME means only operators ( == , != ) are supported. SOME + X means SOME and X operators are supported. For example: |BaseCondition.ID| ALL | supports ( == , != , > , < , >= , <= ) operators. |BaseCondition.ID_ARRAY| SOME | supports only ( == , != ) operators. |UserCondition.USERNAME| SOME + (%)| supports ( == , != , % ) operators. If there is neither ALL nor SOME in the condition but an operator is specified, then that means only that operator is supported. I hope you understand the above. :) Tip Field Value Type means the type of value against which the field should be conditioned. Tip All X_ARRAY fields must be conditioned against an Iterable of values and these fields yield an iterable of objects which match the values from the API. Field Field Value Type Operations Supported Description ID int ALL Filter using an ID ID_ARRAY A typing.Iterable of int s SOME Filter using an array of ID s. azaka.commands.condition.VNCondition ( BaseCondition ) + A class storing all the attributes VN type supports as condition. Hint Check the BaseCondition class for more information. Attribute Field Value Type Operations Supported Description TITLE str SOME + (%) Filter using the TITLE Field. PLATFORMS None or str SOME Filter using the PLATFORMS field. PLATFORMS_ARRAY A typing.Iterable of str s SOME Filter using an array of PLATFORMS. RELEASED None SOME Filter using a None value for RELEASED . RELEASED_DATE date ALL Filter using the release date of the VN. LANGUAGES None or str SOME Filter using the language, the VN is available in. LANGUAGES_ARRAY A typing.Iterable of str s SOME Filter using the array of languages, the VN is available in. FIRST_CHAR None or str SOME Filter using the first character of the VN or None to match all the vn not starting with an alphabet. ORIG_LANG str SOME Filter using the original language of the VN. ORIG_LANG_ARRAY A typing.Iterable of str s SOME Filter using an array of the original languages of the VN. SEARCH str (%) Search for the VN using it's title and releases. TAGS int SOME Find VNs by tag. TAGS_ARRAY A typing.Iterable of int s SOME Find VNs using an array of tags. azaka.commands.condition.ReleaseCondition ( BaseCondition ) + A class storing all the attributes Release type supports as condition. Hint Check the BaseCondition class for more information. Attribute Field Value Type Operations Supported Description VN int ALL Find releases linked to the given visual novel ID. VN_ARRAY A typing.Iterable of int s SOME Find all the releases linked to the given visual novel IDs in the array. PRODUCER int (==) Find releases linked to the given producer ID. TITLE str SOME + (%) Find the release using the title. ORIGINAL None or str SOME + (%) Find the release using the original/official title. ( % operation not supported for None ) RELEASED None SOME Filter using a None value for RELEASED . RELEASED_DATE datetime.date ALL Filter using the release date of the VN. PATCH bool (==) Check if the release is a patch. FREEWARE bool (==) Check if the release is a freeware. DOUJIN bool (==) Check if the release is a doujin. TYPE str SOME Filter using the type of release. GTIN int SOME Filter using the JAN/UPC/EAN code. CATALOG str SOME Filter using the Catalog number. LANGUAGES str SOME Filter using the language, the release is available in. LANGUAGES_ARRAY A typing.Iterable of str s SOME Filter using the array of languages, the release is available in. PLATFORMS str SOME Filter using an array of PLATFORMS. PLATFORMS_ARRAY A typing.Iterable of str s SOME Filter using an array of PLATFORMS. azaka.commands.condition.CharacterCondition ( BaseCondition ) + A class storing all the attributes Character type supports as condition. Hint Check the BaseCondition class for more information. Attribute Field Value Type Operations Supported Description NAME [str] SOME + (%) Find using name of character. ORIGINAL None or str SOME + (%) Find using original/official name of the character. Can't use % with None . SEARCH str (%) Performs a search on the name, original and aliases fields. VN int (==) Find characters linked to the given visual novel ID. VN_ARRAY A typing.Iterable of int s (==) Find characters linked to the given visual novel ID array. TRAITS int SOME Find characters by trait. TRAITS_ARRAY A typing.Iterable of int s SOME The = filter will return chars that are linked to any (not all) of the given traits, the != filter will return chars that are not linked to any of the given traits. azaka.commands.condition.StaffCondition ( BaseCondition ) + A class storing all the attributes Staff type supports as condition. Hint Check the BaseCondition class for more information. Attribute Field Value Type Operations Supported Description AID int (==) Find staff by alias ID. AID_ARRAY A typing.Iterable of int s (==) Find staff by an array of alias IDs. SEARCH str (%) Performs a search on the name, original and aliases fields. azaka.commands.condition.QuoteCondition ( BaseCondition ) + A class storing all the attributes Staff type supports as condition. Hint Check the BaseCondition class for more information. Info This one only supports ID and ID_ARRAY filters of BaseCondition . azaka.commands.condition.UserCondition ( BaseCondition ) + A class storing all the attributes User type supports as condition. Hint Check the BaseCondition class for more information. Attribute Field Value Type Operations Supported Description USERNAME str SOME + (%) Find user by their username. USERNAME_ARRAY A typing.Iterable of str s (==) Find user using an array of usernames. azaka.commands.condition.UlistLabelsCondition + A class storing all the attributes UlistLabels type supports as condition. Info This class doesn't inherit from BaseCondition and doesn't have ID and ID_ARRAY filters. Attribute Field Value Type Operations Supported Description UID int (==) Find using user ID. The special value '0' is recognized as the currently logged in user. azaka.commands.condition.UlistCondition ( UlistLabelsCondition ) + A class storing all the attributes Ulist type supports as condition. Hint Check the UlistLabelsCondition class for more information. Attribute Field Value Type Operations Supported Description VN int ALL Find by visual novel ID. VN_ARRAY A typing.Iterable of int s SOME Find using an array of visual novel IDs. LABEL int (==) Label assigned to the VN. azaka.commands.condition.ProducerCondition ( BaseCondition ) + A class storing all the attributes Producer type supports as condition. Hint Check the BaseCondition class for more information. Attribute Field Value Type Operations Supported Description NAME str SOME + (%) Find using name of producer. ORIGINAL None or str SOME + (%) Find using original/official name of the producer. Can't use % with None . TYPE str SOME Filter using type of producer. LANGUAGE str SOME Filter using language of producer. LANGUAGES_ARRAY A typing.Iterable of str s SOME Filter using an array of languages of producer. SEARCH str (%) Performs a search on the name, original and aliases fields.","title":"Condition"},{"location":"API-Reference/public/condition/#azaka.commands.condition.Operator","text":"An object for storing operators for XCondition attributes to check condition support. Warning This object is not meant to be created by users.","title":"Operator"},{"location":"API-Reference/public/condition/#azaka.commands.condition.Operator.__init__","text":"Operator constructor. Parameters: Name Type Description Default *symbols str The symbols of the operator. () Attributes: Name Type Description symbols t.Tuple[str] The symbols of the operator.","title":"__init__()"},{"location":"API-Reference/public/condition/#azaka.commands.condition.Operator.fill_some","text":"A factory method for creating an Operator object with some symbols. Parameters: Name Type Description Default *symbols str The additional symbols of the operator. () Returns: Type Description Operator The created Operator object. Info This method fills the = and != symbols.","title":"fill_some()"},{"location":"API-Reference/public/condition/#azaka.commands.condition.Operator.fill_all","text":"A factory method for creating an Operator object with all symbols. Parameters: Name Type Description Default *symbols str The additional symbols of the operator. () Returns: Type Description Operator The created Operator object. Info This method fills the = , != , > , < , >= , <= symbols.","title":"fill_all()"},{"location":"API-Reference/public/condition/#azaka.commands.condition.BaseCondition","text":"A base class storing the comman condition attributes. Tip ALL below means all operators ( == , != , > , < , >= , <= ) are supported. SOME means only operators ( == , != ) are supported. SOME + X means SOME and X operators are supported. For example: |BaseCondition.ID| ALL | supports ( == , != , > , < , >= , <= ) operators. |BaseCondition.ID_ARRAY| SOME | supports only ( == , != ) operators. |UserCondition.USERNAME| SOME + (%)| supports ( == , != , % ) operators. If there is neither ALL nor SOME in the condition but an operator is specified, then that means only that operator is supported. I hope you understand the above. :) Tip Field Value Type means the type of value against which the field should be conditioned. Tip All X_ARRAY fields must be conditioned against an Iterable of values and these fields yield an iterable of objects which match the values from the API. Field Field Value Type Operations Supported Description ID int ALL Filter using an ID ID_ARRAY A typing.Iterable of int s SOME Filter using an array of ID s.","title":"BaseCondition"},{"location":"API-Reference/public/condition/#azaka.commands.condition.VNCondition","text":"A class storing all the attributes VN type supports as condition. Hint Check the BaseCondition class for more information. Attribute Field Value Type Operations Supported Description TITLE str SOME + (%) Filter using the TITLE Field. PLATFORMS None or str SOME Filter using the PLATFORMS field. PLATFORMS_ARRAY A typing.Iterable of str s SOME Filter using an array of PLATFORMS. RELEASED None SOME Filter using a None value for RELEASED . RELEASED_DATE date ALL Filter using the release date of the VN. LANGUAGES None or str SOME Filter using the language, the VN is available in. LANGUAGES_ARRAY A typing.Iterable of str s SOME Filter using the array of languages, the VN is available in. FIRST_CHAR None or str SOME Filter using the first character of the VN or None to match all the vn not starting with an alphabet. ORIG_LANG str SOME Filter using the original language of the VN. ORIG_LANG_ARRAY A typing.Iterable of str s SOME Filter using an array of the original languages of the VN. SEARCH str (%) Search for the VN using it's title and releases. TAGS int SOME Find VNs by tag. TAGS_ARRAY A typing.Iterable of int s SOME Find VNs using an array of tags.","title":"VNCondition"},{"location":"API-Reference/public/condition/#azaka.commands.condition.ReleaseCondition","text":"A class storing all the attributes Release type supports as condition. Hint Check the BaseCondition class for more information. Attribute Field Value Type Operations Supported Description VN int ALL Find releases linked to the given visual novel ID. VN_ARRAY A typing.Iterable of int s SOME Find all the releases linked to the given visual novel IDs in the array. PRODUCER int (==) Find releases linked to the given producer ID. TITLE str SOME + (%) Find the release using the title. ORIGINAL None or str SOME + (%) Find the release using the original/official title. ( % operation not supported for None ) RELEASED None SOME Filter using a None value for RELEASED . RELEASED_DATE datetime.date ALL Filter using the release date of the VN. PATCH bool (==) Check if the release is a patch. FREEWARE bool (==) Check if the release is a freeware. DOUJIN bool (==) Check if the release is a doujin. TYPE str SOME Filter using the type of release. GTIN int SOME Filter using the JAN/UPC/EAN code. CATALOG str SOME Filter using the Catalog number. LANGUAGES str SOME Filter using the language, the release is available in. LANGUAGES_ARRAY A typing.Iterable of str s SOME Filter using the array of languages, the release is available in. PLATFORMS str SOME Filter using an array of PLATFORMS. PLATFORMS_ARRAY A typing.Iterable of str s SOME Filter using an array of PLATFORMS.","title":"ReleaseCondition"},{"location":"API-Reference/public/condition/#azaka.commands.condition.CharacterCondition","text":"A class storing all the attributes Character type supports as condition. Hint Check the BaseCondition class for more information. Attribute Field Value Type Operations Supported Description NAME [str] SOME + (%) Find using name of character. ORIGINAL None or str SOME + (%) Find using original/official name of the character. Can't use % with None . SEARCH str (%) Performs a search on the name, original and aliases fields. VN int (==) Find characters linked to the given visual novel ID. VN_ARRAY A typing.Iterable of int s (==) Find characters linked to the given visual novel ID array. TRAITS int SOME Find characters by trait. TRAITS_ARRAY A typing.Iterable of int s SOME The = filter will return chars that are linked to any (not all) of the given traits, the != filter will return chars that are not linked to any of the given traits.","title":"CharacterCondition"},{"location":"API-Reference/public/condition/#azaka.commands.condition.StaffCondition","text":"A class storing all the attributes Staff type supports as condition. Hint Check the BaseCondition class for more information. Attribute Field Value Type Operations Supported Description AID int (==) Find staff by alias ID. AID_ARRAY A typing.Iterable of int s (==) Find staff by an array of alias IDs. SEARCH str (%) Performs a search on the name, original and aliases fields.","title":"StaffCondition"},{"location":"API-Reference/public/condition/#azaka.commands.condition.QuoteCondition","text":"A class storing all the attributes Staff type supports as condition. Hint Check the BaseCondition class for more information. Info This one only supports ID and ID_ARRAY filters of BaseCondition .","title":"QuoteCondition"},{"location":"API-Reference/public/condition/#azaka.commands.condition.UserCondition","text":"A class storing all the attributes User type supports as condition. Hint Check the BaseCondition class for more information. Attribute Field Value Type Operations Supported Description USERNAME str SOME + (%) Find user by their username. USERNAME_ARRAY A typing.Iterable of str s (==) Find user using an array of usernames.","title":"UserCondition"},{"location":"API-Reference/public/condition/#azaka.commands.condition.UlistLabelsCondition","text":"A class storing all the attributes UlistLabels type supports as condition. Info This class doesn't inherit from BaseCondition and doesn't have ID and ID_ARRAY filters. Attribute Field Value Type Operations Supported Description UID int (==) Find using user ID. The special value '0' is recognized as the currently logged in user.","title":"UlistLabelsCondition"},{"location":"API-Reference/public/condition/#azaka.commands.condition.UlistCondition","text":"A class storing all the attributes Ulist type supports as condition. Hint Check the UlistLabelsCondition class for more information. Attribute Field Value Type Operations Supported Description VN int ALL Find by visual novel ID. VN_ARRAY A typing.Iterable of int s SOME Find using an array of visual novel IDs. LABEL int (==) Label assigned to the VN.","title":"UlistCondition"},{"location":"API-Reference/public/condition/#azaka.commands.condition.ProducerCondition","text":"A class storing all the attributes Producer type supports as condition. Hint Check the BaseCondition class for more information. Attribute Field Value Type Operations Supported Description NAME str SOME + (%) Find using name of producer. ORIGINAL None or str SOME + (%) Find using original/official name of the producer. Can't use % with None . TYPE str SOME Filter using type of producer. LANGUAGE str SOME Filter using language of producer. LANGUAGES_ARRAY A typing.Iterable of str s SOME Filter using an array of languages of producer. SEARCH str (%) Performs a search on the name, original and aliases fields.","title":"ProducerCondition"},{"location":"API-Reference/public/context/","text":"azaka.context.Context + A context holding all the necessary info and objects to connect and interact with the VNDB API. This same object is given to the 0th arg of every coroutine function decorated with Client.register . Attributes: Name Type Description ADDR str The address of the VNDB API. PORT int The port to which client should connect. Azaka only supports 19535 as it provides TLS support. PROTOCOL_VERSION int The version of the protocol this client is using. Currently, this is 1 . CLIENT_NAME str The name of the client. Defaults to Azaka . CLIENT_VERSION str The version of the client. __init__ ( self , client , * , username = None , password = None , loop = None , ssl_context = None ) special + Context Constructor. This is where all the necessary info and objects are stored. Attributes: Name Type Description client The client object that is using this context. username Username to use for logging in. password Password to use for logging in. loop The asyncio.AbstractEventLoop subclass to use. ssl_context The ssl.SSLContext to use. If not provided, a default context will be used. COMMAND TYPE ATTRIBUTES + Below are the attributes which are meant to be used as argument for the type parameter of Interface. init . Attributes: Name Type Description vn The vn command type. character The character command type. producer The producer command type. release The release command type. staff The staff command type. quote The quote command type. user The user command type. ulist_labels The ulist-labels command type. ulist The ulist command type. Warning This object is not meant to be constructed by users. get_vn ( self , predicate , * , details = False ) async + Get VNs matching the predicate. By default this will use BASIC flag. If you want to append DETAILS flag, you need to pass details=True as an argument. Parameters: Name Type Description Default predicate t.Callable[[t.Type[VNCondition]], BoolOProxy] A callable that takes a VNCondition and returns a BoolOProxy . required details bool Whether to get the basic and detailed info of the vn. False Returns: Type Description t.Optional[t.List[VN]] A list of VN matching the predicate. Examples: @register async def main ( ctx ): await ctx . get_vn ( lambda VN : VN . ID == 11 ) All the get_x methods in this class can be used in same way as get_vn . Info This and all get_x methods in this class are an abstraction over Client.get and provide lesser flexibility. get_staff ( self , predicate , * , details = False ) async + Get Staff matching the predicate. info and usage Parameters: Name Type Description Default predicate t.Callable[[t.Type[StaffCondition]], BoolOProxy] A callable that takes a StaffCondition and returns a BoolOProxy . required Returns: Type Description t.Optional[t.List[Staff]] A list of Staff s matching the predicate. get_release ( self , predicate , * , details = False ) async + Get Releases matching the predicate. info and usage Parameters: Name Type Description Default predicate t.Callable[[t.Type[ReleaseCondition]], BoolOProxy] A callable that takes a ReleaseCondition and returns a BoolOProxy . required details bool Whether to get the basic and detailed info of the release. False Returns: Type Description t.Optional[t.List[Release]] A list of Release s matching the predicate. get_character ( self , predicate , * , details = False ) async + Get Characters matching the predicate. info and usage Parameters: Name Type Description Default predicate t.Callable[[t.Type[CharacterCondition]], BoolOProxy] A callable that takes a CharacterCondition and returns a BoolOProxy . required details bool Whether to get the basic and detailed info of the character. False Returns: Type Description t.Optional[t.List[Character]] A list of Character s matching the predicate. get_producer ( self , predicate , * , details = False ) async + Get Producers matching the predicate. info and usage Parameters: Name Type Description Default predicate t.Callable[[t.Type[ProducerCondition]], BoolOProxy] A callable that takes a ProducerCondition and returns a BoolOProxy . required details bool Whether to get the basic and detailed info of the producer. False Returns: Type Description t.Optional[t.List[Producer]] A list of Producer s matching the predicate. get_quote ( self , predicate ) async + Get Quotes matching the predicate. info and usage Parameters: Name Type Description Default predicate t.Callable[[t.Type[QuoteCondition]], BoolOProxy] A callable that takes a QuoteCondition and returns a BoolOProxy . required Returns: Type Description t.Optional[t.List[Quote]] A list of Quote s matching the predicate. get_user ( self , predicate ) async + Get Users matching the predicate. info and usage Parameters: Name Type Description Default predicate t.Callable[[t.Type[UserCondition]], BoolOProxy] A callable that takes a UserCondition and returns a BoolOProxy . required Returns: Type Description t.Optional[t.List[User]] A list of User s matching the predicate. get_ulist ( self , predicate ) async + Get Ulists matching the predicate. info and usage Parameters: Name Type Description Default predicate t.Callable[[t.Type[UlistCondition]], BoolOProxy] A callable that takes a UlistCondition and returns a BoolOProxy . required Returns: Type Description t.Optional[t.List[Ulist]] A list of Ulist s matching the predicate. get_ulist_labels ( self , predicate ) async + Get Ulist Labels matching the predicate. info and usage Parameters: Name Type Description Default predicate t.Callable[[t.Type[UlistLabelsCondition]], BoolOProxy] A callable that takes a UlistLabelsCondition and returns a BoolOProxy . required Returns: Type Description t.Optional[t.List[UlistLabels]] A list of UlistLabels matching the predicate.","title":"Context"},{"location":"API-Reference/public/context/#azaka.context.Context","text":"A context holding all the necessary info and objects to connect and interact with the VNDB API. This same object is given to the 0th arg of every coroutine function decorated with Client.register . Attributes: Name Type Description ADDR str The address of the VNDB API. PORT int The port to which client should connect. Azaka only supports 19535 as it provides TLS support. PROTOCOL_VERSION int The version of the protocol this client is using. Currently, this is 1 . CLIENT_NAME str The name of the client. Defaults to Azaka . CLIENT_VERSION str The version of the client.","title":"Context"},{"location":"API-Reference/public/context/#azaka.context.Context.__init__","text":"Context Constructor. This is where all the necessary info and objects are stored. Attributes: Name Type Description client The client object that is using this context. username Username to use for logging in. password Password to use for logging in. loop The asyncio.AbstractEventLoop subclass to use. ssl_context The ssl.SSLContext to use. If not provided, a default context will be used.","title":"__init__()"},{"location":"API-Reference/public/context/#azaka.context.Context.__init__--command-type-attributes","text":"Below are the attributes which are meant to be used as argument for the type parameter of Interface. init . Attributes: Name Type Description vn The vn command type. character The character command type. producer The producer command type. release The release command type. staff The staff command type. quote The quote command type. user The user command type. ulist_labels The ulist-labels command type. ulist The ulist command type. Warning This object is not meant to be constructed by users.","title":"COMMAND TYPE ATTRIBUTES"},{"location":"API-Reference/public/context/#azaka.context.Context.get_vn","text":"Get VNs matching the predicate. By default this will use BASIC flag. If you want to append DETAILS flag, you need to pass details=True as an argument. Parameters: Name Type Description Default predicate t.Callable[[t.Type[VNCondition]], BoolOProxy] A callable that takes a VNCondition and returns a BoolOProxy . required details bool Whether to get the basic and detailed info of the vn. False Returns: Type Description t.Optional[t.List[VN]] A list of VN matching the predicate. Examples: @register async def main ( ctx ): await ctx . get_vn ( lambda VN : VN . ID == 11 ) All the get_x methods in this class can be used in same way as get_vn . Info This and all get_x methods in this class are an abstraction over Client.get and provide lesser flexibility.","title":"get_vn()"},{"location":"API-Reference/public/context/#azaka.context.Context.get_staff","text":"Get Staff matching the predicate. info and usage Parameters: Name Type Description Default predicate t.Callable[[t.Type[StaffCondition]], BoolOProxy] A callable that takes a StaffCondition and returns a BoolOProxy . required Returns: Type Description t.Optional[t.List[Staff]] A list of Staff s matching the predicate.","title":"get_staff()"},{"location":"API-Reference/public/context/#azaka.context.Context.get_release","text":"Get Releases matching the predicate. info and usage Parameters: Name Type Description Default predicate t.Callable[[t.Type[ReleaseCondition]], BoolOProxy] A callable that takes a ReleaseCondition and returns a BoolOProxy . required details bool Whether to get the basic and detailed info of the release. False Returns: Type Description t.Optional[t.List[Release]] A list of Release s matching the predicate.","title":"get_release()"},{"location":"API-Reference/public/context/#azaka.context.Context.get_character","text":"Get Characters matching the predicate. info and usage Parameters: Name Type Description Default predicate t.Callable[[t.Type[CharacterCondition]], BoolOProxy] A callable that takes a CharacterCondition and returns a BoolOProxy . required details bool Whether to get the basic and detailed info of the character. False Returns: Type Description t.Optional[t.List[Character]] A list of Character s matching the predicate.","title":"get_character()"},{"location":"API-Reference/public/context/#azaka.context.Context.get_producer","text":"Get Producers matching the predicate. info and usage Parameters: Name Type Description Default predicate t.Callable[[t.Type[ProducerCondition]], BoolOProxy] A callable that takes a ProducerCondition and returns a BoolOProxy . required details bool Whether to get the basic and detailed info of the producer. False Returns: Type Description t.Optional[t.List[Producer]] A list of Producer s matching the predicate.","title":"get_producer()"},{"location":"API-Reference/public/context/#azaka.context.Context.get_quote","text":"Get Quotes matching the predicate. info and usage Parameters: Name Type Description Default predicate t.Callable[[t.Type[QuoteCondition]], BoolOProxy] A callable that takes a QuoteCondition and returns a BoolOProxy . required Returns: Type Description t.Optional[t.List[Quote]] A list of Quote s matching the predicate.","title":"get_quote()"},{"location":"API-Reference/public/context/#azaka.context.Context.get_user","text":"Get Users matching the predicate. info and usage Parameters: Name Type Description Default predicate t.Callable[[t.Type[UserCondition]], BoolOProxy] A callable that takes a UserCondition and returns a BoolOProxy . required Returns: Type Description t.Optional[t.List[User]] A list of User s matching the predicate.","title":"get_user()"},{"location":"API-Reference/public/context/#azaka.context.Context.get_ulist","text":"Get Ulists matching the predicate. info and usage Parameters: Name Type Description Default predicate t.Callable[[t.Type[UlistCondition]], BoolOProxy] A callable that takes a UlistCondition and returns a BoolOProxy . required Returns: Type Description t.Optional[t.List[Ulist]] A list of Ulist s matching the predicate.","title":"get_ulist()"},{"location":"API-Reference/public/context/#azaka.context.Context.get_ulist_labels","text":"Get Ulist Labels matching the predicate. info and usage Parameters: Name Type Description Default predicate t.Callable[[t.Type[UlistLabelsCondition]], BoolOProxy] A callable that takes a UlistLabelsCondition and returns a BoolOProxy . required Returns: Type Description t.Optional[t.List[UlistLabels]] A list of UlistLabels matching the predicate.","title":"get_ulist_labels()"},{"location":"API-Reference/public/enums/","text":"azaka.tools.enums.Flags ( Enum ) + An enum.Enum of all the available flags. These flags decide what data the API should return. Attributes: Name Type Description BASIC str The basic flag. DETAILS str The details flag. ANIME str The anime flag. RELATIONS str The relations flag. TAGS str The tags flag. STATS str The stats flag. SCREENS str The screens flag. STAFF str The staff flag. VN str The vn flag. PRODUCERS str The producers flag. MEAS str The meas flag. TRAITS str The traits flag. VNS str The vns flag. VOICED str The voiced flag. INSTANCES str The instances flag. ALIASES str The aliases flag. LABELS str The labels flag. Info These can be stacked together using a tuple. azaka.tools.enums.ResponseType ( Enum ) + An enum.Enum of all the available response types. These are the possible response types API can return and in most cases you will not need to use or get them directly. except for Client.set_ulist . Attributes: Name Type Description OK str The ok response type. ERROR str The error response type. DBSTATS str The dbstats response type. SESSION str The session response type. RESULTS str The results response type. azaka.tools.enums.ErrorType ( Enum ) + An enum.Enum of all the available error types. These are the possible error types API can return. These are present as an attribute of all errors which inherit from AzakaException . Attributes: Name Type Description PARSE str The parse error type. MISSING str The missing error type. BADARG str The badarg error type. NEEDLOGIN str The needlogin error type. THROTTLED str The throttled error type. AUTH str The auth error type. LOGGEDIN str The loggedin error type. GETTYPE str The gettype error type. SETTYPE str The settype error type. FILTER str The filter error type. GETINFO str The getinfo error type. azaka.tools.enums.Gender ( Enum ) + An enum.Enum of all available genders. Attributes: Name Type Description MALE str The m (male) Gender. FEMALE str The f (female) Gender. BOTH str The b (??) azaka.tools.enums.Rtype ( Enum ) + An enum.Enum of all available release type (rtype). Attributes: Name Type Description TRIAL str The trial rtype. PARTIAL str The partial rtype. COMPLETE str The complete rtype. azaka.tools.enums.Roles ( Enum ) + An enum.Enum of all available character roles. Attributes: Name Type Description MAIN str The main role. PRIMARY str The primary role. SIDE str The side role. APPEARS str The appears role. azaka.tools.enums.Spoiler ( IntEnum ) + An enum.IntEnum of all available spoiler levels. Attributes: Name Type Description NONE int The 0 spoiler level. MINOR int The 1 spoiler level. MAJOR int The 2 spoiler level. azaka.tools.enums.VoicedType ( IntEnum ) + An enum.IntEnum of all available voiced types. Attributes: Name Type Description NOT_VOICED int The 1 voiced type. ONLY_ERO_VOICED int The 2 voiced type. PARTIALLY_VOICED int The 3 voiced type. FULLY_VOICED int The 4 voiced type. azaka.tools.enums.AnimationType ( IntEnum ) + An enum.IntEnum of all available animation types. Attributes: Name Type Description NO_ANIMATIONS int The 1 animation type. SIMPLE_ANIMATIONS int The 2 animation type. PARTIAL_ANIMATIONS int The 3 animation type. FULL_ANIMATIONS int The 4 animation type. azaka.tools.enums.Labels ( IntEnum ) + An enum.IntEnum of all available labels. Attributes: Name Type Description NOLABEL int The 0 label. PLAYING int The 1 label. FINISHED int The 2 label. STALLED int The 3 label. DROPPED int The 4 label. WISHLIST int The 5 label. BLACKLIST int The 6 label.","title":"Enums"},{"location":"API-Reference/public/enums/#azaka.tools.enums.Flags","text":"An enum.Enum of all the available flags. These flags decide what data the API should return. Attributes: Name Type Description BASIC str The basic flag. DETAILS str The details flag. ANIME str The anime flag. RELATIONS str The relations flag. TAGS str The tags flag. STATS str The stats flag. SCREENS str The screens flag. STAFF str The staff flag. VN str The vn flag. PRODUCERS str The producers flag. MEAS str The meas flag. TRAITS str The traits flag. VNS str The vns flag. VOICED str The voiced flag. INSTANCES str The instances flag. ALIASES str The aliases flag. LABELS str The labels flag. Info These can be stacked together using a tuple.","title":"Flags"},{"location":"API-Reference/public/enums/#azaka.tools.enums.ResponseType","text":"An enum.Enum of all the available response types. These are the possible response types API can return and in most cases you will not need to use or get them directly. except for Client.set_ulist . Attributes: Name Type Description OK str The ok response type. ERROR str The error response type. DBSTATS str The dbstats response type. SESSION str The session response type. RESULTS str The results response type.","title":"ResponseType"},{"location":"API-Reference/public/enums/#azaka.tools.enums.ErrorType","text":"An enum.Enum of all the available error types. These are the possible error types API can return. These are present as an attribute of all errors which inherit from AzakaException . Attributes: Name Type Description PARSE str The parse error type. MISSING str The missing error type. BADARG str The badarg error type. NEEDLOGIN str The needlogin error type. THROTTLED str The throttled error type. AUTH str The auth error type. LOGGEDIN str The loggedin error type. GETTYPE str The gettype error type. SETTYPE str The settype error type. FILTER str The filter error type. GETINFO str The getinfo error type.","title":"ErrorType"},{"location":"API-Reference/public/enums/#azaka.tools.enums.Gender","text":"An enum.Enum of all available genders. Attributes: Name Type Description MALE str The m (male) Gender. FEMALE str The f (female) Gender. BOTH str The b (??)","title":"Gender"},{"location":"API-Reference/public/enums/#azaka.tools.enums.Rtype","text":"An enum.Enum of all available release type (rtype). Attributes: Name Type Description TRIAL str The trial rtype. PARTIAL str The partial rtype. COMPLETE str The complete rtype.","title":"Rtype"},{"location":"API-Reference/public/enums/#azaka.tools.enums.Roles","text":"An enum.Enum of all available character roles. Attributes: Name Type Description MAIN str The main role. PRIMARY str The primary role. SIDE str The side role. APPEARS str The appears role.","title":"Roles"},{"location":"API-Reference/public/enums/#azaka.tools.enums.Spoiler","text":"An enum.IntEnum of all available spoiler levels. Attributes: Name Type Description NONE int The 0 spoiler level. MINOR int The 1 spoiler level. MAJOR int The 2 spoiler level.","title":"Spoiler"},{"location":"API-Reference/public/enums/#azaka.tools.enums.VoicedType","text":"An enum.IntEnum of all available voiced types. Attributes: Name Type Description NOT_VOICED int The 1 voiced type. ONLY_ERO_VOICED int The 2 voiced type. PARTIALLY_VOICED int The 3 voiced type. FULLY_VOICED int The 4 voiced type.","title":"VoicedType"},{"location":"API-Reference/public/enums/#azaka.tools.enums.AnimationType","text":"An enum.IntEnum of all available animation types. Attributes: Name Type Description NO_ANIMATIONS int The 1 animation type. SIMPLE_ANIMATIONS int The 2 animation type. PARTIAL_ANIMATIONS int The 3 animation type. FULL_ANIMATIONS int The 4 animation type.","title":"AnimationType"},{"location":"API-Reference/public/enums/#azaka.tools.enums.Labels","text":"An enum.IntEnum of all available labels. Attributes: Name Type Description NOLABEL int The 0 label. PLAYING int The 1 label. FINISHED int The 2 label. STALLED int The 3 label. DROPPED int The 4 label. WISHLIST int The 5 label. BLACKLIST int The 6 label.","title":"Labels"},{"location":"API-Reference/public/exceptions/","text":"azaka.exceptions.AzakaException ( Exception ) + Base class for all Azaka exceptions. Attributes: Name Type Description message str The error message. azaka.exceptions.InvalidResponseTypeError ( AzakaException ) + An exception that is raised when the response type is invalid. Attributes: Name Type Description type str The response type API returned. azaka.exceptions.OperationNotSupportedError ( AzakaException ) + An exception that is raised when an operation is not supported between the field and value. azaka.exceptions.BrokenConnectorError ( AzakaException ) + An exception that is raised when the connector is broken/not available. azaka.exceptions.CommandError ( AzakaException ) + Base class for all command errors. Attributes: Name Type Description id ErrorType The error ID. (An enum of ErrorType ) azaka.exceptions.CommandFilterError ( CommandError ) + An exception that is raised when a command filter is invalid. Attributes: Name Type Description field str The field used in the filter. op str The operator. value str The value. expression : str property readonly + Returns a string representation of the filter. azaka.exceptions.MissingFieldError ( CommandError ) + An exception that is raised when a field is missing. Attributes: Name Type Description field str The missing field. azaka.exceptions.BadFieldError ( CommandError ) + An exception that is raised when a field is invalid. Attributes: Name Type Description field str The invalid field. azaka.exceptions.AuthorizationError ( CommandError ) + An exception that is raised when the credentials to login are invalid. azaka.exceptions.UnknownGetTypeError ( CommandError ) + An exception that is raised when the type of a get command is unknown. azaka.exceptions.UnknownGetFlagError ( CommandError ) + An exception that is raised when the flag of a get command is unknown. Attributes: Name Type Description flag str The unknown flag. azaka.exceptions.CommandSyntaxError ( CommandError ) + An exception that is raised when the syntax of a command is invalid. azaka.exceptions.ThrottledError ( CommandError ) + An exception that is raised when the user is getting rate limited. Attributes: Name Type Description type str The type of the rate limit. minwait float The minimum wait time. fullwait float The full wait time. azaka.exceptions.InterfaceError ( AzakaException ) + An exception that is raised when the interface is broken.","title":"Exceptions"},{"location":"API-Reference/public/exceptions/#azaka.exceptions.AzakaException","text":"Base class for all Azaka exceptions. Attributes: Name Type Description message str The error message.","title":"AzakaException"},{"location":"API-Reference/public/exceptions/#azaka.exceptions.InvalidResponseTypeError","text":"An exception that is raised when the response type is invalid. Attributes: Name Type Description type str The response type API returned.","title":"InvalidResponseTypeError"},{"location":"API-Reference/public/exceptions/#azaka.exceptions.OperationNotSupportedError","text":"An exception that is raised when an operation is not supported between the field and value.","title":"OperationNotSupportedError"},{"location":"API-Reference/public/exceptions/#azaka.exceptions.BrokenConnectorError","text":"An exception that is raised when the connector is broken/not available.","title":"BrokenConnectorError"},{"location":"API-Reference/public/exceptions/#azaka.exceptions.CommandError","text":"Base class for all command errors. Attributes: Name Type Description id ErrorType The error ID. (An enum of ErrorType )","title":"CommandError"},{"location":"API-Reference/public/exceptions/#azaka.exceptions.CommandFilterError","text":"An exception that is raised when a command filter is invalid. Attributes: Name Type Description field str The field used in the filter. op str The operator. value str The value.","title":"CommandFilterError"},{"location":"API-Reference/public/exceptions/#azaka.exceptions.CommandFilterError.expression","text":"Returns a string representation of the filter.","title":"expression"},{"location":"API-Reference/public/exceptions/#azaka.exceptions.MissingFieldError","text":"An exception that is raised when a field is missing. Attributes: Name Type Description field str The missing field.","title":"MissingFieldError"},{"location":"API-Reference/public/exceptions/#azaka.exceptions.BadFieldError","text":"An exception that is raised when a field is invalid. Attributes: Name Type Description field str The invalid field.","title":"BadFieldError"},{"location":"API-Reference/public/exceptions/#azaka.exceptions.AuthorizationError","text":"An exception that is raised when the credentials to login are invalid.","title":"AuthorizationError"},{"location":"API-Reference/public/exceptions/#azaka.exceptions.UnknownGetTypeError","text":"An exception that is raised when the type of a get command is unknown.","title":"UnknownGetTypeError"},{"location":"API-Reference/public/exceptions/#azaka.exceptions.UnknownGetFlagError","text":"An exception that is raised when the flag of a get command is unknown. Attributes: Name Type Description flag str The unknown flag.","title":"UnknownGetFlagError"},{"location":"API-Reference/public/exceptions/#azaka.exceptions.CommandSyntaxError","text":"An exception that is raised when the syntax of a command is invalid.","title":"CommandSyntaxError"},{"location":"API-Reference/public/exceptions/#azaka.exceptions.ThrottledError","text":"An exception that is raised when the user is getting rate limited. Attributes: Name Type Description type str The type of the rate limit. minwait float The minimum wait time. fullwait float The full wait time.","title":"ThrottledError"},{"location":"API-Reference/public/exceptions/#azaka.exceptions.InterfaceError","text":"An exception that is raised when the interface is broken.","title":"InterfaceError"},{"location":"API-Reference/public/interface/","text":"azaka.interface.Interface + A helper class to make it easier to create GET commands. Examples: @client . register async def new ( ctx : Context ) -> None : with Interface ( type = ctx . user , flags = ( Flags . BASIC ,)) as interface : interface . set_condition ( lambda USER : USER . ID == 34 ) await client . get ( interface ) flags : t . Iterable [ Flags ] property writable + Flags to use when fetching data. Returns: Type Description t.Iterable[Flags] The flags to use when fetching data. None if no flags are set. __init__ ( self , type , * , flags = ()) special + The interface constructor. Parameters: Name Type Description Default type The type of data to fetch from the API. required flags t.Iterable[Flags] The flags to use when fetching data. () Note The Context contains various type s that can be used or just pass one of the objects from Objects yourself but not in any case the object should be constructed. Attributes: Name Type Description condition The Condition type for this interface. (Automatically set based on type). set_condition ( self , predicate ) + Sets the condition for this interface. Parameters: Name Type Description Default predicate t.Union[t.Callable[[t.Type[BaseCondition]], BoolOProxy], BoolOProxy] The condition to set. required Note predicate can be a callable which takes a BaseCondition arg or a BoolOProxy object. Exceptions: Type Description InterfaceError If the condition is already set for the interface in use. add_option ( self , ** kwargs ) + Adds options to the interface. Parameters: Name Type Description Default **kwargs t.Any The options to add. {} azaka.interface.SETInterface + A helper class to make it easier to create SET commands. __init__ ( self , id , * , vote = None ) special + SETInterface constructor. Parameters: Name Type Description Default id int The id of the item to modify. required vote t.Optional[int] The vote to set for the item. (Must be between 10 and 100) None write_notes ( self , notes ) + Writes notes for the item in ulist. Parameters: Name Type Description Default notes str The notes to write. required started_on ( self , date ) + Sets the start date for the item. Parameters: Name Type Description Default date str The date to set. required finished_on ( self , date ) + Sets the finish date for the item. Parameters: Name Type Description Default date str The date to set. required set_labels ( self , * labels ) + Sets the Labels for the item. Parameters: Name Type Description Default *labels Labels The labels to set. ()","title":"Interface"},{"location":"API-Reference/public/interface/#azaka.interface.Interface","text":"A helper class to make it easier to create GET commands. Examples: @client . register async def new ( ctx : Context ) -> None : with Interface ( type = ctx . user , flags = ( Flags . BASIC ,)) as interface : interface . set_condition ( lambda USER : USER . ID == 34 ) await client . get ( interface )","title":"Interface"},{"location":"API-Reference/public/interface/#azaka.interface.Interface.flags","text":"Flags to use when fetching data. Returns: Type Description t.Iterable[Flags] The flags to use when fetching data. None if no flags are set.","title":"flags"},{"location":"API-Reference/public/interface/#azaka.interface.Interface.__init__","text":"The interface constructor. Parameters: Name Type Description Default type The type of data to fetch from the API. required flags t.Iterable[Flags] The flags to use when fetching data. () Note The Context contains various type s that can be used or just pass one of the objects from Objects yourself but not in any case the object should be constructed. Attributes: Name Type Description condition The Condition type for this interface. (Automatically set based on type).","title":"__init__()"},{"location":"API-Reference/public/interface/#azaka.interface.Interface.set_condition","text":"Sets the condition for this interface. Parameters: Name Type Description Default predicate t.Union[t.Callable[[t.Type[BaseCondition]], BoolOProxy], BoolOProxy] The condition to set. required Note predicate can be a callable which takes a BaseCondition arg or a BoolOProxy object. Exceptions: Type Description InterfaceError If the condition is already set for the interface in use.","title":"set_condition()"},{"location":"API-Reference/public/interface/#azaka.interface.Interface.add_option","text":"Adds options to the interface. Parameters: Name Type Description Default **kwargs t.Any The options to add. {}","title":"add_option()"},{"location":"API-Reference/public/interface/#azaka.interface.SETInterface","text":"A helper class to make it easier to create SET commands.","title":"SETInterface"},{"location":"API-Reference/public/interface/#azaka.interface.SETInterface.__init__","text":"SETInterface constructor. Parameters: Name Type Description Default id int The id of the item to modify. required vote t.Optional[int] The vote to set for the item. (Must be between 10 and 100) None","title":"__init__()"},{"location":"API-Reference/public/interface/#azaka.interface.SETInterface.write_notes","text":"Writes notes for the item in ulist. Parameters: Name Type Description Default notes str The notes to write. required","title":"write_notes()"},{"location":"API-Reference/public/interface/#azaka.interface.SETInterface.started_on","text":"Sets the start date for the item. Parameters: Name Type Description Default date str The date to set. required","title":"started_on()"},{"location":"API-Reference/public/interface/#azaka.interface.SETInterface.finished_on","text":"Sets the finish date for the item. Parameters: Name Type Description Default date str The date to set. required","title":"finished_on()"},{"location":"API-Reference/public/interface/#azaka.interface.SETInterface.set_labels","text":"Sets the Labels for the item. Parameters: Name Type Description Default *labels Labels The labels to set. ()","title":"set_labels()"},{"location":"API-Reference/public/paginator/","text":"azaka.tools.paginator.Paginator + A Paginator returned by the Client.get method used to provide async and stateful iteration over the results of get command (s). Attributes: Name Type Description current_page t.Optiona[t.Iterable[BaseObject]] The current page of results. current_page_num int The current page number. more bool If there are more pages to fetch. next ( self ) async + Fetches the next page of results. Returns: Type Description t.Optional[t.Iterable[BaseObject]] The next page of results. previous ( self ) async + Fetches the previous page of results. Returns: Type Description t.Optional[t.Iterable[BaseObject]] The previous page of results. compress ( self ) async + Fetches all the pages of results. Returns: Type Description t.List[t.Iterable[BaseObject]] A list of pages of results.","title":"Paginator"},{"location":"API-Reference/public/paginator/#azaka.tools.paginator.Paginator","text":"A Paginator returned by the Client.get method used to provide async and stateful iteration over the results of get command (s). Attributes: Name Type Description current_page t.Optiona[t.Iterable[BaseObject]] The current page of results. current_page_num int The current page number. more bool If there are more pages to fetch.","title":"Paginator"},{"location":"API-Reference/public/paginator/#azaka.tools.paginator.Paginator.next","text":"Fetches the next page of results. Returns: Type Description t.Optional[t.Iterable[BaseObject]] The next page of results.","title":"next()"},{"location":"API-Reference/public/paginator/#azaka.tools.paginator.Paginator.previous","text":"Fetches the previous page of results. Returns: Type Description t.Optional[t.Iterable[BaseObject]] The previous page of results.","title":"previous()"},{"location":"API-Reference/public/paginator/#azaka.tools.paginator.Paginator.compress","text":"Fetches all the pages of results. Returns: Type Description t.List[t.Iterable[BaseObject]] A list of pages of results.","title":"compress()"},{"location":"API-Reference/public/objects/baseobject/","text":"azaka.objects.baseobject.BaseObject + A base object for all the models in this directory. (except DBStats ) Note This class is not meant to be instantiated directly. Attributes: Name Type Description id int The id of the item. (It will never be None .) __eq__ ( self , other ) special + Compares two objects using their id. Returns: Type Description bool True if the objects are equal, False otherwise. __hash__ ( self ) special + Returns the hashed id of the object. Returns: Type Description int The hashed id of the object. __ne__ ( self , other ) special + Compares two objects using their id. Returns: Type Description bool True if the objects are not equal, False otherwise.","title":"BaseObject"},{"location":"API-Reference/public/objects/baseobject/#azaka.objects.baseobject.BaseObject","text":"A base object for all the models in this directory. (except DBStats ) Note This class is not meant to be instantiated directly. Attributes: Name Type Description id int The id of the item. (It will never be None .)","title":"BaseObject"},{"location":"API-Reference/public/objects/baseobject/#azaka.objects.baseobject.BaseObject.__eq__","text":"Compares two objects using their id. Returns: Type Description bool True if the objects are equal, False otherwise.","title":"__eq__()"},{"location":"API-Reference/public/objects/baseobject/#azaka.objects.baseobject.BaseObject.__hash__","text":"Returns the hashed id of the object. Returns: Type Description int The hashed id of the object.","title":"__hash__()"},{"location":"API-Reference/public/objects/baseobject/#azaka.objects.baseobject.BaseObject.__ne__","text":"Compares two objects using their id. Returns: Type Description bool True if the objects are not equal, False otherwise.","title":"__ne__()"},{"location":"API-Reference/public/objects/character/","text":"azaka.objects.character.Character ( BaseObject ) + A class representing a character. Note This class is not meant to be instantiated directly. Note Every Attribute except id is optional and may return None . FLAG: NONE + Attributes: Name Type Description id int The character's ID. FLAG: BASIC + Attributes: Name Type Description name str The character's name (romaji). original str The character's original (kana/kanji) name. gender Gender Character's sex. spoil_gender int Actual sex if this is a spoiler. bloodt str Blood type of the character (can be one of a , b , ab or o ) birthday t.List[int] list of two integers: day of the month (1-31) and the month (1-12). Either can be None . FLAG: DETAILS + Attributes: Name Type Description aliases str Aliases of the character. description str Description of the character. age int Age of the character in years. image str URL of the character's image. FLAG: MEAS + Attributes: Name Type Description bust int Bust size of the character in cm. waist int Waist size of the character in cm. hip int Hip size of the character in cm. cup_size str Cup size of the character. weight int Weight of the character in kg. height int Height of the character in cm. FLAG: TRAITS + Attributes: Name Type Description traits t.list[t.List[int]] list of traits linked to this character. Each trait is represented as a list of two elements: The trait id ( int ) and the spoiler level ( int , 0-2). vns : List [ List [ int ]] property readonly + Returns list of visual novels linked to this character. Each VN is a list of 4 elements: VN id, release ID (0 = all releases), spoiler level ( Spoiler ) and the role ( Roles ). Info The list is populated only when the command was issued with the VNS Flags otherwise it is empty. image_flagging : Optional [ azaka . objects . vn . ImageFlagging ] property readonly + Returns the ImageFlagging of the character. Info This returns an ImageFlagging object only when the command was issued with the DETAILS Flags otherwise it is None . voiced : List [ azaka . objects . character . CharacterVoiced ] property readonly + Returns the list of CharacterVoiced objects.. Info The list is populated only when the command was issued with the VOICED Flags otherwise it is empty. instances : List [ azaka . objects . character . Instance ] property readonly + Returns the list of Instance s of the character. Info The list is populated only when the command was issued with the INSTANCES Flags otherwise it is empty. azaka.objects.character.CharacterVoiced dataclass + A dataclass representing a charactervoiced. Attributes: Name Type Description id int staff ID. vid int VN ID. AID The staff alias ID being used. note Optional[str] The staff note. azaka.objects.character.Instance dataclass + A dataclass representing an instance. Attributes: Name Type Description id int staff ID. spoiler Optional[azaka.tools.enums.Spoiler] A Spoiler object representing the sevearity of spoiler. name Optional[str] Character name. original Optional[str] Character's original name.","title":"Character"},{"location":"API-Reference/public/objects/character/#azaka.objects.character.Character","text":"A class representing a character. Note This class is not meant to be instantiated directly. Note Every Attribute except id is optional and may return None .","title":"Character"},{"location":"API-Reference/public/objects/character/#azaka.objects.character.Character--flag-none","text":"Attributes: Name Type Description id int The character's ID.","title":"FLAG: NONE"},{"location":"API-Reference/public/objects/character/#azaka.objects.character.Character--flag-basic","text":"Attributes: Name Type Description name str The character's name (romaji). original str The character's original (kana/kanji) name. gender Gender Character's sex. spoil_gender int Actual sex if this is a spoiler. bloodt str Blood type of the character (can be one of a , b , ab or o ) birthday t.List[int] list of two integers: day of the month (1-31) and the month (1-12). Either can be None .","title":"FLAG: BASIC"},{"location":"API-Reference/public/objects/character/#azaka.objects.character.Character--flag-details","text":"Attributes: Name Type Description aliases str Aliases of the character. description str Description of the character. age int Age of the character in years. image str URL of the character's image.","title":"FLAG: DETAILS"},{"location":"API-Reference/public/objects/character/#azaka.objects.character.Character--flag-meas","text":"Attributes: Name Type Description bust int Bust size of the character in cm. waist int Waist size of the character in cm. hip int Hip size of the character in cm. cup_size str Cup size of the character. weight int Weight of the character in kg. height int Height of the character in cm.","title":"FLAG: MEAS"},{"location":"API-Reference/public/objects/character/#azaka.objects.character.Character--flag-traits","text":"Attributes: Name Type Description traits t.list[t.List[int]] list of traits linked to this character. Each trait is represented as a list of two elements: The trait id ( int ) and the spoiler level ( int , 0-2).","title":"FLAG: TRAITS"},{"location":"API-Reference/public/objects/character/#azaka.objects.character.Character.vns","text":"Returns list of visual novels linked to this character. Each VN is a list of 4 elements: VN id, release ID (0 = all releases), spoiler level ( Spoiler ) and the role ( Roles ). Info The list is populated only when the command was issued with the VNS Flags otherwise it is empty.","title":"vns"},{"location":"API-Reference/public/objects/character/#azaka.objects.character.Character.image_flagging","text":"Returns the ImageFlagging of the character. Info This returns an ImageFlagging object only when the command was issued with the DETAILS Flags otherwise it is None .","title":"image_flagging"},{"location":"API-Reference/public/objects/character/#azaka.objects.character.Character.voiced","text":"Returns the list of CharacterVoiced objects.. Info The list is populated only when the command was issued with the VOICED Flags otherwise it is empty.","title":"voiced"},{"location":"API-Reference/public/objects/character/#azaka.objects.character.Character.instances","text":"Returns the list of Instance s of the character. Info The list is populated only when the command was issued with the INSTANCES Flags otherwise it is empty.","title":"instances"},{"location":"API-Reference/public/objects/character/#azaka.objects.character.CharacterVoiced","text":"A dataclass representing a charactervoiced. Attributes: Name Type Description id int staff ID. vid int VN ID. AID The staff alias ID being used. note Optional[str] The staff note.","title":"CharacterVoiced"},{"location":"API-Reference/public/objects/character/#azaka.objects.character.Instance","text":"A dataclass representing an instance. Attributes: Name Type Description id int staff ID. spoiler Optional[azaka.tools.enums.Spoiler] A Spoiler object representing the sevearity of spoiler. name Optional[str] Character name. original Optional[str] Character's original name.","title":"Instance"},{"location":"API-Reference/public/objects/dbstats/","text":"azaka.objects.dbstats.DBStats + A class representing a dbstats. Note This class is not meant to be instantiated directly. Note Every Attribute is optional and may return None . Attributes: Name Type Description chars int The number of characters. posts int The number of posts. producers int The number of producers. releases int The number of releases. staff int The number of staff. tags int The number of tags. threads int The number of threads. traits int The number of traits. users int The number of users. vn int The number of VNs.","title":"DBStats"},{"location":"API-Reference/public/objects/dbstats/#azaka.objects.dbstats.DBStats","text":"A class representing a dbstats. Note This class is not meant to be instantiated directly. Note Every Attribute is optional and may return None . Attributes: Name Type Description chars int The number of characters. posts int The number of posts. producers int The number of producers. releases int The number of releases. staff int The number of staff. tags int The number of tags. threads int The number of threads. traits int The number of traits. users int The number of users. vn int The number of VNs.","title":"DBStats"},{"location":"API-Reference/public/objects/producer/","text":"azaka.objects.producer.Producer ( BaseObject ) + A class representing a producer. Note This class is not meant to be instantiated directly. Note Every Attribute is optional and may return None . FLAG: NONE + Attributes: Name Type Description id int The producer's id. FLAG: BASIC + Attributes: Name Type Description name str The producer's name. (romaji) original str The producer's original/official name. type str The producer's type. language str The producer's primary language. FLAG: DETAILS + Attributes: Name Type Description aliases t.List[str] list of producer's aliases (alternative names). description str The producer's description/notes. links : Optional [ azaka . objects . producer . ProducerLinks ] property readonly + Returns the ProducerLinks object. Info This returns a ProducerLinks object only when the command was issued with the DETAILS Flags otherwise it is None . relations : List [ azaka . objects . producer . ProducerRelation ] property readonly + Returns a list of ProducerRelation objects. Info The list is populated only when the command was issued with the RELATIONS Flags otherwise it is empty. azaka.objects.producer.ProducerLinks dataclass + A dataclass representing a links. Attributes: Name Type Description homepage Optional[str] Official homepage. wikipedia Optional[str] Related Wikipedia page. (deprecated) wikidata Optional[str] Wikidata identifier. azaka.objects.producer.ProducerRelation dataclass + A dataclass representing a producerrelation. Attributes: Name Type Description id int The relation's ID. name Optional[str] The relation's name. original Optional[str] The relation's original name. relation Optional[str] Relation to current producer.","title":"Producer"},{"location":"API-Reference/public/objects/producer/#azaka.objects.producer.Producer","text":"A class representing a producer. Note This class is not meant to be instantiated directly. Note Every Attribute is optional and may return None .","title":"Producer"},{"location":"API-Reference/public/objects/producer/#azaka.objects.producer.Producer--flag-none","text":"Attributes: Name Type Description id int The producer's id.","title":"FLAG: NONE"},{"location":"API-Reference/public/objects/producer/#azaka.objects.producer.Producer--flag-basic","text":"Attributes: Name Type Description name str The producer's name. (romaji) original str The producer's original/official name. type str The producer's type. language str The producer's primary language.","title":"FLAG: BASIC"},{"location":"API-Reference/public/objects/producer/#azaka.objects.producer.Producer--flag-details","text":"Attributes: Name Type Description aliases t.List[str] list of producer's aliases (alternative names). description str The producer's description/notes.","title":"FLAG: DETAILS"},{"location":"API-Reference/public/objects/producer/#azaka.objects.producer.Producer.links","text":"Returns the ProducerLinks object. Info This returns a ProducerLinks object only when the command was issued with the DETAILS Flags otherwise it is None .","title":"links"},{"location":"API-Reference/public/objects/producer/#azaka.objects.producer.Producer.relations","text":"Returns a list of ProducerRelation objects. Info The list is populated only when the command was issued with the RELATIONS Flags otherwise it is empty.","title":"relations"},{"location":"API-Reference/public/objects/producer/#azaka.objects.producer.ProducerLinks","text":"A dataclass representing a links. Attributes: Name Type Description homepage Optional[str] Official homepage. wikipedia Optional[str] Related Wikipedia page. (deprecated) wikidata Optional[str] Wikidata identifier.","title":"ProducerLinks"},{"location":"API-Reference/public/objects/producer/#azaka.objects.producer.ProducerRelation","text":"A dataclass representing a producerrelation. Attributes: Name Type Description id int The relation's ID. name Optional[str] The relation's name. original Optional[str] The relation's original name. relation Optional[str] Relation to current producer.","title":"ProducerRelation"},{"location":"API-Reference/public/objects/quote/","text":"azaka.objects.quote.Quote ( BaseObject ) + A class representing a quote. Note This class is not meant to be instantiated directly. Note Every Attribute is optional and may return None . FLAG: NONE + Attributes: Name Type Description id int The quote's id. FLAG: BASIC + Attributes: Name Type Description title str The quote's title. quote str The quote's text.","title":"Quote"},{"location":"API-Reference/public/objects/quote/#azaka.objects.quote.Quote","text":"A class representing a quote. Note This class is not meant to be instantiated directly. Note Every Attribute is optional and may return None .","title":"Quote"},{"location":"API-Reference/public/objects/quote/#azaka.objects.quote.Quote--flag-none","text":"Attributes: Name Type Description id int The quote's id.","title":"FLAG: NONE"},{"location":"API-Reference/public/objects/quote/#azaka.objects.quote.Quote--flag-basic","text":"Attributes: Name Type Description title str The quote's title. quote str The quote's text.","title":"FLAG: BASIC"},{"location":"API-Reference/public/objects/release/","text":"azaka.objects.release.Release ( BaseObject ) + A class representing a release. Note This class is not meant to be instantiated directly. Note Every Attribute is optional and may return None . FLAG: NONE + Attributes: Name Type Description id int The release's ID. FLAG: BASIC + Attributes: Name Type Description title str The release's title. (romaji) original str The release's original/official title. released str The release date. type str The release type. (Deprecated) patch bool Whether the release is a patch. freeware bool Whether the release is freeware. doujin bool Whether the release is doujin. languages t.iterable[str] The release's languages. FLAG: DETAILS + Attributes: Name Type Description website str The release's official website url. notes str The release's notes. minage int The release's age rating. (0 = all ages) gtin str The release's JAN/UPC/EAN code. catalog str The release's catalog number. platforms t.iterable[str] The release's platforms. (Empty list when platform is unknown) resolution str The release's resolution. voiced VoicedType The release's voiced status. animations : List [ azaka . tools . enums . AnimationType ] property readonly + Returns a list of AnimationType enums. Note The list has two members of an enum type AnimationType , the first one indicating the story animations, the second the ero scene animations. Both members can be None if unknown or not applicable. Info The list is populated only when the command was issued with the DETAILS Flags otherwise it is empty. medias : List [ azaka . objects . release . Media ] property readonly + Returns a list of Media objects. Info The list is populated only when the command was issued with the DETAILS Flags otherwise it is empty. release_vns : List [ azaka . objects . release . ReleaseVN ] property readonly + Returns a list of ReleaseVN objects. Info The list is populated only when the command was issued with the VN Flags otherwise it is empty. release_producers : List [ azaka . objects . release . ReleaseProducer ] property readonly + Returns a list of ReleaseProducer objects. Info The list is populated only when the command was issued with the PRODUCERS Flags otherwise it is empty. azaka.objects.release.ReleaseVN dataclass + A dataclass representing a releasevn. Attributes: Name Type Description id int The vn's id. title Optional[str] The vn's title. rtype Optional[str] The vn's release type. original Optional[str] The vn's original title. azaka.objects.release.Media dataclass + A dataclass representing a media. Attributes: Name Type Description medium Optional[str] The media's medium. qty Optional[int] The media's quantity. None when it is not applicable for the medium. azaka.objects.release.ReleaseProducer dataclass + A dataclass representing a releaseproducer. Attributes: Name Type Description id int The producer's id. name Optional[str] The producer's name. (romaji) original Optional[str] The producer's original/official name. developer Optional[bool] The producer is a developer. publisher Optional[bool] The producer is a publisher. type Optional[str] The producer's type.","title":"Release"},{"location":"API-Reference/public/objects/release/#azaka.objects.release.Release","text":"A class representing a release. Note This class is not meant to be instantiated directly. Note Every Attribute is optional and may return None .","title":"Release"},{"location":"API-Reference/public/objects/release/#azaka.objects.release.Release--flag-none","text":"Attributes: Name Type Description id int The release's ID.","title":"FLAG: NONE"},{"location":"API-Reference/public/objects/release/#azaka.objects.release.Release--flag-basic","text":"Attributes: Name Type Description title str The release's title. (romaji) original str The release's original/official title. released str The release date. type str The release type. (Deprecated) patch bool Whether the release is a patch. freeware bool Whether the release is freeware. doujin bool Whether the release is doujin. languages t.iterable[str] The release's languages.","title":"FLAG: BASIC"},{"location":"API-Reference/public/objects/release/#azaka.objects.release.Release--flag-details","text":"Attributes: Name Type Description website str The release's official website url. notes str The release's notes. minage int The release's age rating. (0 = all ages) gtin str The release's JAN/UPC/EAN code. catalog str The release's catalog number. platforms t.iterable[str] The release's platforms. (Empty list when platform is unknown) resolution str The release's resolution. voiced VoicedType The release's voiced status.","title":"FLAG: DETAILS"},{"location":"API-Reference/public/objects/release/#azaka.objects.release.Release.animations","text":"Returns a list of AnimationType enums. Note The list has two members of an enum type AnimationType , the first one indicating the story animations, the second the ero scene animations. Both members can be None if unknown or not applicable. Info The list is populated only when the command was issued with the DETAILS Flags otherwise it is empty.","title":"animations"},{"location":"API-Reference/public/objects/release/#azaka.objects.release.Release.medias","text":"Returns a list of Media objects. Info The list is populated only when the command was issued with the DETAILS Flags otherwise it is empty.","title":"medias"},{"location":"API-Reference/public/objects/release/#azaka.objects.release.Release.release_vns","text":"Returns a list of ReleaseVN objects. Info The list is populated only when the command was issued with the VN Flags otherwise it is empty.","title":"release_vns"},{"location":"API-Reference/public/objects/release/#azaka.objects.release.Release.release_producers","text":"Returns a list of ReleaseProducer objects. Info The list is populated only when the command was issued with the PRODUCERS Flags otherwise it is empty.","title":"release_producers"},{"location":"API-Reference/public/objects/release/#azaka.objects.release.ReleaseVN","text":"A dataclass representing a releasevn. Attributes: Name Type Description id int The vn's id. title Optional[str] The vn's title. rtype Optional[str] The vn's release type. original Optional[str] The vn's original title.","title":"ReleaseVN"},{"location":"API-Reference/public/objects/release/#azaka.objects.release.Media","text":"A dataclass representing a media. Attributes: Name Type Description medium Optional[str] The media's medium. qty Optional[int] The media's quantity. None when it is not applicable for the medium.","title":"Media"},{"location":"API-Reference/public/objects/release/#azaka.objects.release.ReleaseProducer","text":"A dataclass representing a releaseproducer. Attributes: Name Type Description id int The producer's id. name Optional[str] The producer's name. (romaji) original Optional[str] The producer's original/official name. developer Optional[bool] The producer is a developer. publisher Optional[bool] The producer is a publisher. type Optional[str] The producer's type.","title":"ReleaseProducer"},{"location":"API-Reference/public/objects/staff/","text":"azaka.objects.staff.Staff ( BaseObject ) + A class representing a staff. Note This class is not meant to be instantiated directly. Note Every Attribute is optional and may return None . FLAG: NONE + Attributes: Name Type Description id int The staff's id. FLAG: BASIC + Attributes: Name Type Description name str The staff's name. (romaji) original str The staff's original/official name. gender Gender The staff's gender. Returns an enum Gender language str The staff's primary language. FLAG: DETAILS + Attributes: Name Type Description description str Description/notes of the staff. aliases t.List[t.List[int]]) Aliases of the staff. main_alias int The staff's main alias. (ID of the primary name.) links : Optional [ azaka . objects . staff . StaffLinks ] property readonly + Returns the StaffLinks object. Info This returns a StaffLinks object only when the command was issued with the DETAILS Flags otherwise it is None . staff_vns : List [ azaka . objects . staff . StaffVN ] property readonly + Returns a list of StaffVN objects. Info The list is populated only when the command was issued with the VNS Flags otherwise it is empty. voiced : List [ azaka . objects . staff . StaffVoiced ] property readonly + Returns the list of StaffVoiced objects. Info The list is populated only when the command was issued with the VOICED Flags otherwise it is empty. azaka.objects.staff.StaffLinks dataclass + A dataclass representing a link. Attributes: Name Type Description homepage Optional[str] Official homepage. wikidata Optional[str] Wikidata identifier. wikipedia Optional[str] Related Wikipedia page. (deprecated) twitter Optional[str] Twitter account. anidb Optional[str] AniDB account. pixiv Optional[str] Pixiv account. azaka.objects.staff.StaffVoiced dataclass + A dataclass representing a staffvoiced. Attributes: Name Type Description id int The voiced's id. cid int The character's id. aid Optional[int] The alias's id. note Optional[str] note. azaka.objects.staff.StaffVN dataclass + A dataclass representing a staffvn. Attributes: Name Type Description id int VN ID. aid Optional[int] Staff Alias ID. role Optional[str] The staff role. note Optional[str] The staff note.","title":"Staff"},{"location":"API-Reference/public/objects/staff/#azaka.objects.staff.Staff","text":"A class representing a staff. Note This class is not meant to be instantiated directly. Note Every Attribute is optional and may return None .","title":"Staff"},{"location":"API-Reference/public/objects/staff/#azaka.objects.staff.Staff--flag-none","text":"Attributes: Name Type Description id int The staff's id.","title":"FLAG: NONE"},{"location":"API-Reference/public/objects/staff/#azaka.objects.staff.Staff--flag-basic","text":"Attributes: Name Type Description name str The staff's name. (romaji) original str The staff's original/official name. gender Gender The staff's gender. Returns an enum Gender language str The staff's primary language.","title":"FLAG: BASIC"},{"location":"API-Reference/public/objects/staff/#azaka.objects.staff.Staff--flag-details","text":"Attributes: Name Type Description description str Description/notes of the staff. aliases t.List[t.List[int]]) Aliases of the staff. main_alias int The staff's main alias. (ID of the primary name.)","title":"FLAG: DETAILS"},{"location":"API-Reference/public/objects/staff/#azaka.objects.staff.Staff.links","text":"Returns the StaffLinks object. Info This returns a StaffLinks object only when the command was issued with the DETAILS Flags otherwise it is None .","title":"links"},{"location":"API-Reference/public/objects/staff/#azaka.objects.staff.Staff.staff_vns","text":"Returns a list of StaffVN objects. Info The list is populated only when the command was issued with the VNS Flags otherwise it is empty.","title":"staff_vns"},{"location":"API-Reference/public/objects/staff/#azaka.objects.staff.Staff.voiced","text":"Returns the list of StaffVoiced objects. Info The list is populated only when the command was issued with the VOICED Flags otherwise it is empty.","title":"voiced"},{"location":"API-Reference/public/objects/staff/#azaka.objects.staff.StaffLinks","text":"A dataclass representing a link. Attributes: Name Type Description homepage Optional[str] Official homepage. wikidata Optional[str] Wikidata identifier. wikipedia Optional[str] Related Wikipedia page. (deprecated) twitter Optional[str] Twitter account. anidb Optional[str] AniDB account. pixiv Optional[str] Pixiv account.","title":"StaffLinks"},{"location":"API-Reference/public/objects/staff/#azaka.objects.staff.StaffVoiced","text":"A dataclass representing a staffvoiced. Attributes: Name Type Description id int The voiced's id. cid int The character's id. aid Optional[int] The alias's id. note Optional[str] note.","title":"StaffVoiced"},{"location":"API-Reference/public/objects/staff/#azaka.objects.staff.StaffVN","text":"A dataclass representing a staffvn. Attributes: Name Type Description id int VN ID. aid Optional[int] Staff Alias ID. role Optional[str] The staff role. note Optional[str] The staff note.","title":"StaffVN"},{"location":"API-Reference/public/objects/ulist/","text":"azaka.objects.ulist.Ulist ( BaseObject ) + A class representing a ulist. Note This class is not meant to be instantiated directly. Note Every Attribute is optional and may return None . FLAG: NONE + Attributes: Name Type Description id int The ulist's ID. FLAG: BASIC + Attributes: Name Type Description uid int The ulist's ID. vn int The VN's ID. added int The date the ulist was added. lastmod int The date the ulist was last modified. voted int The date the ulist was voted. vote int The vote of the ulist. notes str The notes of the ulist. started str The date the ulist was started. finished str The date the ulist was finished. labels : Iterable [ azaka . objects . ulist . Label ] property readonly + Returns the list of Label s of the ulist. Info The list is populated only when the command was issued with the LABELS Flags otherwise it is empty. azaka.objects.ulist.Label dataclass + A dataclass representing a labels. Attributes: Name Type Description id int The label's id. label str The label's name.","title":"Ulist"},{"location":"API-Reference/public/objects/ulist/#azaka.objects.ulist.Ulist","text":"A class representing a ulist. Note This class is not meant to be instantiated directly. Note Every Attribute is optional and may return None .","title":"Ulist"},{"location":"API-Reference/public/objects/ulist/#azaka.objects.ulist.Ulist--flag-none","text":"Attributes: Name Type Description id int The ulist's ID.","title":"FLAG: NONE"},{"location":"API-Reference/public/objects/ulist/#azaka.objects.ulist.Ulist--flag-basic","text":"Attributes: Name Type Description uid int The ulist's ID. vn int The VN's ID. added int The date the ulist was added. lastmod int The date the ulist was last modified. voted int The date the ulist was voted. vote int The vote of the ulist. notes str The notes of the ulist. started str The date the ulist was started. finished str The date the ulist was finished.","title":"FLAG: BASIC"},{"location":"API-Reference/public/objects/ulist/#azaka.objects.ulist.Ulist.labels","text":"Returns the list of Label s of the ulist. Info The list is populated only when the command was issued with the LABELS Flags otherwise it is empty.","title":"labels"},{"location":"API-Reference/public/objects/ulist/#azaka.objects.ulist.Label","text":"A dataclass representing a labels. Attributes: Name Type Description id int The label's id. label str The label's name.","title":"Label"},{"location":"API-Reference/public/objects/ulistlabels/","text":"azaka.objects.ulistlabels.UlistLabels ( BaseObject ) + A class representing a ulist. Note This class is not meant to be instantiated directly. Note Every Attribute is optional and may return None . FLAG: NONE + Attributes: Name Type Description id int The ulist's ID. FLAG: BASIC + Attributes: Name Type Description uid int The ulist's ID. label str The label's name. private bool The label is private.","title":"UlistLabels"},{"location":"API-Reference/public/objects/ulistlabels/#azaka.objects.ulistlabels.UlistLabels","text":"A class representing a ulist. Note This class is not meant to be instantiated directly. Note Every Attribute is optional and may return None .","title":"UlistLabels"},{"location":"API-Reference/public/objects/ulistlabels/#azaka.objects.ulistlabels.UlistLabels--flag-none","text":"Attributes: Name Type Description id int The ulist's ID.","title":"FLAG: NONE"},{"location":"API-Reference/public/objects/ulistlabels/#azaka.objects.ulistlabels.UlistLabels--flag-basic","text":"Attributes: Name Type Description uid int The ulist's ID. label str The label's name. private bool The label is private.","title":"FLAG: BASIC"},{"location":"API-Reference/public/objects/user/","text":"azaka.objects.user.User ( BaseObject ) + A class representing a user. Note This class is not meant to be instantiated directly. Note Every Attribute is optional and may return None . FLAG: NONE + Attributes: Name Type Description id int The user's ID. FLAG: BASIC + Attributes: Name Type Description username str The user's username.","title":"User"},{"location":"API-Reference/public/objects/user/#azaka.objects.user.User","text":"A class representing a user. Note This class is not meant to be instantiated directly. Note Every Attribute is optional and may return None .","title":"User"},{"location":"API-Reference/public/objects/user/#azaka.objects.user.User--flag-none","text":"Attributes: Name Type Description id int The user's ID.","title":"FLAG: NONE"},{"location":"API-Reference/public/objects/user/#azaka.objects.user.User--flag-basic","text":"Attributes: Name Type Description username str The user's username.","title":"FLAG: BASIC"},{"location":"API-Reference/public/objects/vn/","text":"azaka.objects.vn.VN ( BaseObject ) + A class representing a vn. Note This class is not meant to be instantiated directly. Note Every Attribute is optional and may return None . FLAG: NONE + Attributes: Name Type Description id int The vn's id. FLAG: BASIC + Attributes: Name Type Description title str The vn's title. original str The vn's original/official title. released str The vn's release date. language t.List[str] The language(s) the vn is available in. orig_lang t.List[str] The vn's original language. platform t.List[str] The platforms on which the vn is available on. FLAG: DETAILS + Attributes: Name Type Description description str The vn's description. image str The vn's image url. tags t.List[t.List[int]] The vn's tags. FLAG: STATS + Attributes: Name Type Description votecount int The vn's vote count. popularity int The vn's popularity. rating int The vn's rating. anime : List [ azaka . objects . vn . Anime ] property readonly + Returns a list of Anime objects associated with this VN. Info The list is populated only when the command was issued with the ANIME Flags otherwise it is empty. screens : List [ azaka . objects . vn . Screens ] property readonly + Returns a list of Screens objects associated with this VN. Info The list is populated only when the command was issued with the SCREENS Flags otherwise it is empty. relations : List [ azaka . objects . vn . VNRelation ] property readonly + Returns a list of VNRelation objects associated with this VN. Info The list is populated only when the command was issued with the RELATIONS Flags otherwise it is empty. staff : List [ azaka . objects . vn . VNStaff ] property readonly + Returns a list of VNStaff objects associated with this VN. Info The list is populated only when the command was issued with the STAFF Flags otherwise it is empty. image_flagging : Optional [ azaka . objects . vn . ImageFlagging ] property readonly + Returns the ImageFlagging object associated with this VN. Info This returns an ImageFlagging object only when the command was issued with the DETAILS Flags otherwise it is None . links : Optional [ azaka . objects . vn . VNLinks ] property readonly + Returns the VNLinks object. Info This returns a VNLinks object only when the command was issued with the DETAILS Flags otherwise it is None . azaka.objects.vn.ImageFlagging dataclass + A dataclass representing an imageflagging. Attributes: Name Type Description votecount Optional[int] The image's vote count. sexual_avg Optional[int] The image's sexual average. violence_avg Optional[int] The image's violence average. azaka.objects.vn.Anime dataclass + A dataclass representing an anime. Attributes: Name Type Description id int The anime's id. title_romaji Optional[str] The anime's title. (romaji) title_kanji Optional[str] The anime's title. (kanji) ann_id Optional[int] The anime's AnimeNewsNetwork ID. nfo_id Optional[str] The anime's AnimeNfo ID year Optional[int] The anime's release year. type Optional[str] The anime's type. azaka.objects.vn.VNStaff dataclass + A dataclass representing a vnstaff. Attributes: Name Type Description sid Optional[str] The staff's id. aid Optional[int] The staff's alias id. name Optional[str] The staff's name. original Optional[str] The staff's original name. role Optional[str] The staff's role. note Optional[str] The staff's note. azaka.objects.vn.Screens dataclass + A dataclass representing a screens. Attributes: Name Type Description image Optional[str] URL of the full-size screenshot. rid Optional[int] Release ID. flagging Optional[azaka.objects.vn.ImageFlagging] ImageFlagging object. height Optional[int] Height of the screenshot. width Optional[int] Width of the screenshot. nsfw Optional[bool] True if the screenshot is NSFW. azaka.objects.vn.VNRelation dataclass + A dataclass representing a vnrelation. Attributes: Name Type Description id int The relation's id. relation Optional[str] Relation to the vn. title Optional[str] The relation's title. (romaji) original Optional[str] The relation's original title. official Optional[bool] If the relation is an official one. azaka.objects.vn.VNLinks dataclass + A dataclass representing a vnlinks. Attributes: Name Type Description wikidata Optional[str] The vn's wikidata identifier. renai Optional[str] The name part of the url on renai.us wikipedia Optional[str] Name of the related article on the English Wikipedia. (depricated) encubed Optional[str] The URL-encoded tag used on encubed. (deprecated)","title":"VN"},{"location":"API-Reference/public/objects/vn/#azaka.objects.vn.VN","text":"A class representing a vn. Note This class is not meant to be instantiated directly. Note Every Attribute is optional and may return None .","title":"VN"},{"location":"API-Reference/public/objects/vn/#azaka.objects.vn.VN--flag-none","text":"Attributes: Name Type Description id int The vn's id.","title":"FLAG: NONE"},{"location":"API-Reference/public/objects/vn/#azaka.objects.vn.VN--flag-basic","text":"Attributes: Name Type Description title str The vn's title. original str The vn's original/official title. released str The vn's release date. language t.List[str] The language(s) the vn is available in. orig_lang t.List[str] The vn's original language. platform t.List[str] The platforms on which the vn is available on.","title":"FLAG: BASIC"},{"location":"API-Reference/public/objects/vn/#azaka.objects.vn.VN--flag-details","text":"Attributes: Name Type Description description str The vn's description. image str The vn's image url. tags t.List[t.List[int]] The vn's tags.","title":"FLAG: DETAILS"},{"location":"API-Reference/public/objects/vn/#azaka.objects.vn.VN--flag-stats","text":"Attributes: Name Type Description votecount int The vn's vote count. popularity int The vn's popularity. rating int The vn's rating.","title":"FLAG: STATS"},{"location":"API-Reference/public/objects/vn/#azaka.objects.vn.VN.anime","text":"Returns a list of Anime objects associated with this VN. Info The list is populated only when the command was issued with the ANIME Flags otherwise it is empty.","title":"anime"},{"location":"API-Reference/public/objects/vn/#azaka.objects.vn.VN.screens","text":"Returns a list of Screens objects associated with this VN. Info The list is populated only when the command was issued with the SCREENS Flags otherwise it is empty.","title":"screens"},{"location":"API-Reference/public/objects/vn/#azaka.objects.vn.VN.relations","text":"Returns a list of VNRelation objects associated with this VN. Info The list is populated only when the command was issued with the RELATIONS Flags otherwise it is empty.","title":"relations"},{"location":"API-Reference/public/objects/vn/#azaka.objects.vn.VN.staff","text":"Returns a list of VNStaff objects associated with this VN. Info The list is populated only when the command was issued with the STAFF Flags otherwise it is empty.","title":"staff"},{"location":"API-Reference/public/objects/vn/#azaka.objects.vn.VN.image_flagging","text":"Returns the ImageFlagging object associated with this VN. Info This returns an ImageFlagging object only when the command was issued with the DETAILS Flags otherwise it is None .","title":"image_flagging"},{"location":"API-Reference/public/objects/vn/#azaka.objects.vn.VN.links","text":"Returns the VNLinks object. Info This returns a VNLinks object only when the command was issued with the DETAILS Flags otherwise it is None .","title":"links"},{"location":"API-Reference/public/objects/vn/#azaka.objects.vn.ImageFlagging","text":"A dataclass representing an imageflagging. Attributes: Name Type Description votecount Optional[int] The image's vote count. sexual_avg Optional[int] The image's sexual average. violence_avg Optional[int] The image's violence average.","title":"ImageFlagging"},{"location":"API-Reference/public/objects/vn/#azaka.objects.vn.Anime","text":"A dataclass representing an anime. Attributes: Name Type Description id int The anime's id. title_romaji Optional[str] The anime's title. (romaji) title_kanji Optional[str] The anime's title. (kanji) ann_id Optional[int] The anime's AnimeNewsNetwork ID. nfo_id Optional[str] The anime's AnimeNfo ID year Optional[int] The anime's release year. type Optional[str] The anime's type.","title":"Anime"},{"location":"API-Reference/public/objects/vn/#azaka.objects.vn.VNStaff","text":"A dataclass representing a vnstaff. Attributes: Name Type Description sid Optional[str] The staff's id. aid Optional[int] The staff's alias id. name Optional[str] The staff's name. original Optional[str] The staff's original name. role Optional[str] The staff's role. note Optional[str] The staff's note.","title":"VNStaff"},{"location":"API-Reference/public/objects/vn/#azaka.objects.vn.Screens","text":"A dataclass representing a screens. Attributes: Name Type Description image Optional[str] URL of the full-size screenshot. rid Optional[int] Release ID. flagging Optional[azaka.objects.vn.ImageFlagging] ImageFlagging object. height Optional[int] Height of the screenshot. width Optional[int] Width of the screenshot. nsfw Optional[bool] True if the screenshot is NSFW.","title":"Screens"},{"location":"API-Reference/public/objects/vn/#azaka.objects.vn.VNRelation","text":"A dataclass representing a vnrelation. Attributes: Name Type Description id int The relation's id. relation Optional[str] Relation to the vn. title Optional[str] The relation's title. (romaji) original Optional[str] The relation's original title. official Optional[bool] If the relation is an official one.","title":"VNRelation"},{"location":"API-Reference/public/objects/vn/#azaka.objects.vn.VNLinks","text":"A dataclass representing a vnlinks. Attributes: Name Type Description wikidata Optional[str] The vn's wikidata identifier. renai Optional[str] The name part of the url on renai.us wikipedia Optional[str] Name of the related article on the English Wikipedia. (depricated) encubed Optional[str] The URL-encoded tag used on encubed. (deprecated)","title":"VNLinks"}]}